{% extends 'AppBundle:Layout:base.html.twig' %}

{% block title %}{{ "page.title.list"|trans({},"GatewayBundle") }}{% endblock %}

{% block stylesheets %}
    <!-- DataTables -->
    <link href="{{ asset('assets/plugins/datatables/jquery.dataTables.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/dataTables.colVis.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/dataTables.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
{% endblock %}

{% block pageTitle -%} {{ "menus.Gateway"|trans({},"GatewayBundle") }} {%- endblock %}

{% block pageHeaderExtra %}
<div class="pull-right">
    {% if is_granted('ROLE_GATEWAY_CREATE') %}
    <a class="btn btn-primary waves-effect waves-light pull-right m-b-10" href="{{ path("gateway.create_page") }}" title="Add Gateway"> {{ ""|trans({},"GatewayBundle") }}<span><i class="ti-plus m-r-5"></i></span> Add Gateway</a>
    {% endif %}
    <ul class="list-inline quicklinks font-13 font-normal text-right">
        <li>Quick Links:</li>
        {% if is_granted('ROLE_CURRENCY_VIEW') %}
        <li><a href="{{ path("currency.list_page") }}">Currency</a></li>|
        {% endif %}
        {% if is_granted('ROLE_PRODUCT_VIEW') %}
        <li><a href="{{ path("product.list_page") }}">Product</a></li>|
        {% endif %}
    </ul>
</div>
{% endblock pageHeaderExtra %}

{% block breadcrumb -%}
    <li>{{ "breadcrumb.finance"|trans({},"AppBundle") }}</li>
    <li class="active">{{ "breadcrumb.list"|trans({},"GatewayBundle") }}</li>
{% endblock %}

{% block page -%}
    <div class="col-sm-12">
        <div class="card-box">
            <div id="gatewayList">
                <table id="datatable-responsive"
                    class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0"
                    width="100%">
                    <thead>
                        <tr>
                            <th data-priority="1">{{ "fields.name"|trans({}, "GatewayBundle") }}</th>
                            <th>{{ "fields.paymentOption"|trans({}, "GatewayBundle") }}</th>
                            <th>{{ "fields.currency"|trans({}, "GatewayBundle") }}</th>
                            <th>{{ "fields.balance"|trans({}, "GatewayBundle") }}</th>
                            <th>{{ "fields.status"|trans({}, "GatewayBundle") }}</th>
                            <th data-priority="2">{{ "fields.action"|trans({}, "GatewayBundle") }}</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot></tfoot>
                </table>
            </div>
        </div>
    </div>
{%- endblock %}

{% block javascripts %}
    <script src="{{ asset('bundles/app/js/ZTable.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.bootstrap.js') }}"></script>

    <script src="{{ asset('assets/plugins/datatables/dataTables.buttons.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/vfs_fonts.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.html5.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.responsive.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.colVis.js') }}"></script>

    <script type="text/javascript" >
        var userPreferences = {{ app.user.getPreference('ui.gateway.list.column.visibility')|json_encode()|raw }};
        $(function(){
            var listTable = new ZTable('#gatewayList',  {
                'ajax': {
                    'url': '{{ path("gateway.list_search") }}',
                    'data': function (data, dataTable) {
                        return {
                            'search': data.filters.search,
                            'length': data.length,
                            'start': dataTable.start,
                            'datatable': true,
                            'route': true,
                            'draw': dataTable.draw,
                            'order': data.order,
                            'filter' : data.filters

                        };
                    },
                    'dataFilter': function (str) {
                        return str;
                    }
                },
                'colvis': {
                    'hidden': function () {
                        var hidden = [];
                        for (var i in userPreferences) {
                            if (userPreferences[i] == 'false') {
                                hidden.push(eval(i));
                            }
                        }

                        return hidden;
                    },
                    'exclude': ['gateway.name']
                },
                'featuresDom': "<'form-inline'"
                    + "<'form-group m-r-10 ft-date'<'xs-date'ft>>"
                    + "ftcsodb"
                    + "<'form-group' <'m-t-10'b>>>",
                'features': {
                    'from': {
                        'dom': "<'form-group form-group-sm m-r-10'<'input-group'i<^span 'input-group-addon bg-white text-default'<!'fa fa-calendar'!>>>>",
                        'type': 'date',
                        'label': 'From',
                        'symbol': 'f',
                        'attrs': {
                            'placeholder': 'From',
                            'type': 'input',
                            'class': 'form-control cls-date'
                        },
                        'applyOnChanged': false
                    },
                    'to': {
                        'dom': "<'form-group form-group-sm m-r-10'<'input-group'i<^span 'input-group-addon bg-white text-default'<!'fa fa-calendar'!>>>>",
                        'type': 'date',
                        'label': 'To',
                        'symbol': 't',
                        'attrs': {
                            'placeholder': 'To',
                            'type': 'input',
                            'class': 'form-control cls-date'
                        },
                        'applyOnChanged': false
                    },
                    'currency': {
                        'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                        'type': 'select',
                        'label': 'Currency',
                        'symbol': 'c',
                        'class': 'selectpicker',
                        'attrs': {
                            'data-style': 'btn-white btn-sm',
                            'multiple': 'multiple',
                            'data-none-selected-text': 'Select Currency',
                            'data-width': 'auto',
                            'data-size': 5
                        },
                        'resetValue': function (feature) {
                            $(feature.input).selectpicker('val', feature.feature.value);
                        },
                        'initialized': function (feature) {
                            $.ajax({
                                'url': '{{ path('currency.list_search') }}',
                                'type': 'POST',
                                'success': function (data) {
                                    var options = {};
                                    for (var i in data) {
                                        $(feature.input).append("<option value='" + data[i].id + "'>" + data[i].name + "</option>");
                                    }
                                    $(feature.input).selectpicker('refresh');
                                }
                            });
                        },
                        'value': []
                    },
                    'status': {
                        'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                        'type': 'select',
                        'label': 'Gateway Status',
                        'symbol': 's',
                        'class': 'selectpicker',
                        'attrs': {
                            'data-style': 'btn-white btn-sm',
                            'multiple': 'multiple',
                            'data-none-selected-text': 'Select Status',
                            'data-width': 'auto'
                        },
                        'applyOnChanged': false,
                        'resetValue': function (feature) {
                            $(feature.input).selectpicker('val', feature.feature.value);
                        },
                        'getValue': function (feature) {
                            var value = $(feature.input).val();
                            if (value === null) {
                                value = [];
                            }
                            var statuses = [];
                            if (value.length > 0 && value.indexOf('enabled') !== Global.variables.indexNotFound) {
                                statuses.push(Global.gateway.status.enabled.value);
                            }
                            if (value.length > 0 && value.indexOf('suspended') !== Global.variables.indexNotFound) {
                                statuses.push(Global.gateway.status.suspended.value);
                            }

                            return statuses;
                        },
                        'rendered': function (feature) {
                            $(feature.input).selectpicker('val', '');
                        },
                        'choices': {
                            'enabled': 'Enbaled',
                            'suspended': 'Suspended'
                        },
                        'value': []
                    },
                    'paymentOption': {
                        'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                        'type': 'select',
                        'label': 'P.O',
                        'symbol': 'o',
                        'class': 'selectpicker',
                        'attrs': {
                            'data-style': 'btn-white btn-sm',
                            'title': 'Select P.O',
                            'multiple': 'multiple',
                            'data-width': 'auto',
                            'data-size': 5
                        },
                        'applyOnChanged': false,
                        'resetValue': function (feature) {
                            $(feature.input).selectpicker('val', feature.feature.value);
                        },
                        'initialized': function (feature) {
                            feature.ztable.waitDrawTable();
                            $.ajax({
                                'url': '{{ path('paymentoption.search') }}',
                                'data' : {'select2' : true },
                                'success': function (data) {
                                    for (var i in data.items) {
                                        $(feature.input).append("<option value='" + data.items[i].id + "'>" + data.items[i].text + "</option>");
                                    }
                                    $(feature.input).selectpicker('refresh');
                                    feature.ztable.reloadTable();
                                }
                            });
                        }
                    },
                    'resetFilter': {
                        'type': 'button',
                        'label': 'Reset Filter',
                        'symbol': 'b',
                        'attrs': {
                            'type': 'button',
                            'class': 'btn btn-sm btn-inverse',
                            'title': 'Reset Filter'
                        },
                        'initialized': function (feature) {
                            $(feature.input).click(function () {
                                $("select.ztable_length_input").val('10').change();
                                feature.ztable.reset();
                            });
                        }
                    },
                    'applyFilter': {
                        'type': 'button',
                        'label': 'Apply Filter',
                        'symbol': 'd',
                        'attrs': {
                            'type': 'button',
                            'class': 'btn btn-sm btn-default',
                            'title': 'Apply Filter'
                        },
                        'initialized': function (feature) {
                            $(feature.input).click(function () {
                                feature.ztable.reloadTable();
                            });
                        }
                    }
                },
                'columns': [
                    {   'data': 'gateway.name',
                        'name': 'gateway.name',
                        'defaultContent': '',
                        'render': function(data, type, full) {
                            return "<a href='"+full.routes.update+"'>"+data+"</a>";
                        }
                    },
                   { 'data': 'gateway.paymentOption', 'defaultContent': '' },
                   { 'data': 'gateway.currency.name', 'defaultContent': '' },
                    {
                        'data': 'gateway.balance',
                        'defaultContent': '',
                        'render': function(data) {
                            return (new Decimal(data)).toFixed(2);
                        }
                    },
                    {
                        'data': 'gateway.isActive',
                        'defaultContent': '',
                        'render': function(data, type, full) {
                            if(data) {
                                return "Enabled";
                            }

                            return "Suspended";
                        }
                    },
                    {
                        'data': 'gateway.isActive',
                        'defaultContent': '',
                        'render': function(data, type, full) {
                            var suspend = '<a action="suspend" title="Suspend Gateway" class="btn btn-icon waves-effect waves-light btn-danger btn-xs btn-icn">Suspend</a>';
                            var enable = '<a action="enable" class="btn btn-icon waves-effect waves-light btn-success btn-xs btn-icn">Enable</a>';

                            var actions = '';
                            if (data) {
                                actions = '<a action="suspend" title="Suspend Gateway" class="btn btn-icon waves-effect waves-light btn-danger btn-xs btn-icn">Suspend</a>';
                            } else {
                                actions = '<a action="enable" title="Enable Gateway" class="btn btn-icon waves-effect waves-light btn-success btn-xs btn-icn">Enable</a>';
                            }

                            return actions;
                        }
                    }
                ]
            });

            $('#gatewayList').on('ztable.change.column.visible', function (e, colvis, ztable) {
                saveUserPreferences({'ui.gateway.list.column.visibility': ztable.getColumnVisibility()});
            });

            $('#gatewayList').on('click', 'tr td a.btn', function (e) {
                e.preventDefault();
                var currentRow = $(e.target).parents('tr');
                if (currentRow.hasClass('child')) {
                    currentRow = currentRow.prev();
                }
                var data = listTable.dataTable.api().row(currentRow).data();
                var anchor = $(e.target).closest('a');
                var mode = anchor.attr('action');
                if (mode == 'suspend') {
                    suspendGateway(data.gateway);
                } else {
                    enableGateway(data.gateway);
                }
            });

            function suspendGateway(rowData)
            {
                var gateway = rowData;
                var postURL = "{{ path('gateway.suspend', {'id': 'gateway_id' }) -}}";
                confirm2('Are you sure you want to suspend '+ gateway.name , 'Suspend Gateway', {
                    'type': null,
                    'confirmButtonClass': 'btn-success btn-md',
                    'confirmButtonText': 'Yes',
                    'html': true,
                    'showLoaderOnConfirm': true
                }, function(isSuspended) {
                    if (isSuspended) {
                        $.ajax({
                            url : postURL.replace("gateway_id", gateway.id),
                            globalAjaxComplete : false,
                            type: "POST",
                            dataType: "JSON",
                            success : function (data) {
                                var notifications = data.__notifications || [];
                                swal({
                                    'type': notifications.type,
                                    'title': notifications.title,
                                    'text': notifications.message
                                }, function() {
                                     listTable.reloadTable();
                                });
                            }
                        });
                    }
                });
            }

            function enableGateway(rowData)
            {
                var gateway = rowData;
                var postURL = "{{ path('gateway.enable', {'id': 'gateway_id' }) -}}";
                confirm2('Are you sure you want to enable '+ gateway.name, 'Enable Gateway', {
                    'type': null,
                    'confirmButtonClass': 'btn-success btn-md',
                    'confirmButtonText': 'Yes',
                    'html': true,
                    'showLoaderOnConfirm': true
                }, function(isEnabled) {
                    if (isEnabled) {
                        $.ajax({
                            url : postURL.replace("gateway_id", gateway.id),
                            globalAjaxComplete : false,
                            type: "POST",
                            dataType: "JSON",
                            'success': function (data) {
                                var notifications = data.__notifications || [];
                                swal({
                                    'type': notifications.type,
                                    'title': notifications.title,
                                    'text': notifications.message
                                }, function() {
                                    listTable.reloadTable();
                                });
                            }
                        });
                    }
                });
            }
        });
    </script>
{% endblock %}