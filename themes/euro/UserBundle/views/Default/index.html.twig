{% extends 'AppBundle:Layout:base.html.twig' %}

{% block title %}{{ "page.title.list"|trans({},"UserBundle") }}{% endblock %}

{% block stylesheets %}
    <link href="{{ asset('assets/plugins/datatables/jquery.dataTables.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/dataTables.colVis.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/dataTables.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
{% endblock %}

{% block pageTitle -%}{{ "menus.User"|trans({},"UserBundle") }}{%- endblock pageTitle %}

{% block pageHeaderExtra %}
    <div class="pull-right">
        {% if is_granted('ROLE_USER_CREATE') %}
        <a class="btn btn-primary waves-effect waves-light pull-right m-b-10" href="{{ path("user.create_page") }}"> <span><i class="ti-plus m-r-5"></i></span> {{ "quickLinks.addUser"|trans({}, 'UserBundle') }}</a>
        {% endif %}
        <ul class="list-inline quicklinks font-13 font-normal text-right">
            {% if is_granted(['ROLE_COUNTRY_VIEW' , 'ROLE_TRANSACTION_VIEW' , 'ROLE_ADD_USER_GROUP']) %}
            <li>{{ "quickLinks.name"|trans({}, 'UserBundle') }}:</li>
            {% endif %}
            {% if is_granted('ROLE_COUNTRY_VIEW') %}
            <li><a href="{{ path("country.list_page") }}">{{ "quickLinks.country"|trans({}, 'UserBundle') }}</a></li>|
            {% endif %}
            {% if is_granted('ROLE_TRANSACTION_VIEW') %}
            <li><a href="{{ path("transaction.list_page") }}">{{ "quickLinks.transHistory"|trans({}, 'UserBundle') }}</a></li>|
            {% endif %}
            {% if is_granted('ROLE_ADD_USER_GROUP') %}
            <li><a href="{{ path("group.list_page") }}">{{ "quickLinks.userGroup"|trans({}, 'UserBundle') }}</a></li>
            {% endif %}
        </ul>
    </div>
{% endblock pageHeaderExtra %}

{% block breadcrumb -%}
    <li>{{ "breadcrumb.admin"|trans({},"AppBundle") }}</li>
    <li class="active">{{ "breadcrumb.list"|trans({},"UserBundle") }}</li>
{%- endblock breadcrumb %}

{% block page %}
    <div class="col-sm-12">
        <div class="card-box">
            <div id="userList">
                <table id="datatable-responsive"
                    class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0"
                    width="100%">
                    <thead>
                        <tr>
                            <th>{{ "fields.id"|trans({}, "UserBundle") }}</th>
                            <th data-priority="1">{{ "fields.username"|trans({}, "UserBundle") }}</th>
                            <th>{{ "fields.email"|trans({}, "UserBundle") }}</th>
                            <th>{{ "fields.groups"|trans({}, "UserBundle") }}</th>
                            <th>{{ "fields.createdAt"|trans({}, "UserBundle") }}</th>
                            <th>{{ "fields.createdBy"|trans({}, "UserBundle") }}</th>
                            <th>{{ "fields.ipLastLogin"|trans({}, "UserBundle") }}</th>
                            <th>{{ "fields.isActive"|trans({}, "UserBundle") }}</th>
                            <th data-priority="2">{{ "Action"|trans({}, "UserBundle") }}</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot></tfoot>
                </table>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <!-- DataTables -->
    <script src="{{ asset('bundles/app/js/ZTable.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.bootstrap.js') }}"></script>

    <script src="{{ asset('assets/plugins/datatables/dataTables.buttons.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/vfs_fonts.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.html5.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.responsive.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.colVis.js') }}"></script>

    <script type="text/javascript">
        (function($){

            $.fn.list = function(options, params){
                var settings = options;
                params = params || [];
                return this.each(function(){
                    var elem = $(this);
                    settings = $.extend(true,_defaults(),options);
                    init(elem, settings);
                });
            };

            function init(elem, settings) {
                initTable(elem, settings);
            }

            function initTable(elem, settings) {
                var table = $(elem).find('table');
                var listUrl = settings.url.list;
                var userPreferences = {{ app.user.getPreference('ui.user.list.column.visibility')|json_encode()|raw }};
                var dataTable = new ZTable('#userList',  {
                    'ajax': {
                        'url': settings.url.list,
                        'data': function (data, dataTable) {
                            return {
                                'search': data.filters.search,
                                'length': data.length,
                                'start': dataTable.start,
                                'datatable': true,
                                'route': true,
                                'draw': dataTable.draw,
                                'order': data.order,
                                'filter' : data.filters
                            };
                        },
                        'dataFilter': function (str) {
                            return str;
                        }
                    },
                    'colvis': {
                        'hidden': function () {
                            var hidden = [];
                            for (var i in userPreferences) {
                                if (userPreferences[i] == 'false') {
                                    hidden.push(eval(i));
                                }
                            }
                            return hidden;
                        },

                        'exclude': ['u.id', 'u.username', 'action']
                    },
                    'columns': settings.columns,
                    'ordering': true,
                    'attrs': {
                        'colvisButton' : {
                            'data-style': 'btn-primary'
                        }
                    },
                    'featuresDom': "<'form-inline'"
                        + "<'form-group m-r-10 m-b-5 ft-date'<'xs-date'ft>>"
                        + "ftsgdb"
                        + "<'form-group form-group-sm m-r-10 m-b-5 xs-filter' b>>",
                    'features': {
                        'from': {
                            'dom': "<'form-group form-group-sm m-r-10'<'input-group'i<^span 'input-group-addon bg-white text-default'<!'fa fa-calendar'!>>>>",
                            'type': 'date',
                            'symbol': 'f',
                            'attrs': {
                                'placeholder': 'From'
                            },
                            'applyOnChanged': false
                        },
                        'to': {
                            'dom': "<'form-group form-group-sm m-r-10'<'input-group'i<^span 'input-group-addon bg-white text-default'<!'fa fa-calendar'!>>>>",
                            'type': 'date',
                            'symbol': 't',
                            'attrs': {
                                'placeholder': 'To'
                            },
                            'applyOnChanged': false
                        },
                        'status': {
                            'dom': "<'form-group form-group-sm m-r-10 xs-filter'<'status-product'i>>",
                            'type': 'select',
                            'label': 'Status',
                            'symbol': 's',
                            'class': 'selectpicker',
                            'attrs': {
                                'data-style': 'btn-white btn-sm',
                                'multiple': 'multiple',
                                'data-none-selected-text': 'Select Status',
                                'data-width': 'auto'
                            },
                            'applyOnChanged': false,
                            'resetValue': function (feature) {
                                $(feature.input).selectpicker('val', feature.feature.value);
                            },
                            'getValue': function (feature) {
                                var value = $(feature.input).val();
                                if (value === null) {
                                    value = [];
                                }
                                var statuses = [];
                                if (value.length > 0 && value.indexOf('active') !== Global.variables.indexNotFound) {
                                    statuses.push(Global.user.status.active.value);
                                }
                                if (value.length > 0 && value.indexOf('suspended') !== Global.variables.indexNotFound) {
                                    statuses.push(Global.user.status.suspended.value);
                                }

                                return statuses;
                            },
                            'rendered': function (feature) {
                                $(feature.input).selectpicker('val', '');
                            },
                            'choices': {
                                'active': 'Active',
                                'suspended': 'Suspended'
                            },
                            'value': []
                        },
                        'group': {
                            'dom': "<'form-group form-group-sm m-r-10 xs-filter'<'status-product'i>>",
                            'type': 'select',
                            'label': 'Group',
                            'symbol': 'g',
                            'class': 'selectpicker',
                            'applyOnChanged': false,
                            'attrs': {
                                'data-style': 'btn-white btn-sm',
                                'multiple': 'multiple',
                                'data-none-selected-text': 'Select Group',
                                'data-width': 'auto',
                                'data-size': 5
                            },
                            'resetValue': function (feature) {
                                $(feature.input).selectpicker('val', feature.feature.value);
                            },
                            'initialized': function (feature) {
                                $.ajax({
                                    'url': '{{ path('group.list_search') }}',
                                    'type': 'POST',
                                    'success': function (data) {
                                        var options = {};
                                        for (var i in data) {
                                            $(feature.input).append("<option value='" + data[i].id + "'>" + data[i].name + "</option>");
                                        }
                                        $(feature.input).selectpicker('refresh');
                                    }
                                });
                            },
                            'value': []
                        },
                        'applyFilter': {
                            'type': 'button',
                            'label': 'Apply Filter',
                            'symbol': 'd',
                            'attrs': {
                                'type': 'button',
                                'class': 'btn btn-sm btn-default'
                            },
                            'initialized': function (feature) {
                                $(feature.input).click(function () {
                                    feature.ztable.reloadTable();
                                });
                            }
                        },
                        'resetFilter': {
                            'type': 'button',
                            'label': 'Reset Filter',
                            'symbol': 'b',
                            'attrs': {
                                'type': 'button',
                                'class': 'btn btn-sm btn-inverse'
                            },
                            'initialized': function (feature, dataTable) {
                                $(feature.input).click(function () {
                                    $("select.ztable_length_input").val('10').change();
                                    feature.ztable.reset();
                                });
                            }
                        }
                    },
                    'columnDefs': [
                        {'targets': [0], 'visible': false},
                        { "orderable": false, "targets": [6,8] }
                    ]

                });

                $(table).on('click', 'td a.active-state-action', function(e) {
                    settings.rowOnclick(e, dataTable);
                });

                $('#userList table').on('draw.dt', function () {
                    dataTable.dataTable.api().columns.adjust().responsive.recalc();
                });

                $(elem).on('refresh', { "dataTable": dataTable}, function(event){
                    dataTable.reloadTable();
                });
            }

            function _defaults() {
                return {
                    'columns': [
                        {
                            'data': 'user.id',
                            'name': 'u.id',
                            'defaultContent': '',
                            'render': function(data, type, full) {
                                return "<a href='"+full.routes.update+"'>"+data+"</a>";
                            }
                        },
                        {
                            'data': 'user.username',
                            'name': 'u.username',
                            'defaultContent': ''
                        },
                        {
                            'data': 'user.email',
                            'name': 'u.email',
                            'defaultContent': ''
                        },
                        {
                            'data': 'user.group.name',
                            'name': 'ug.name',
                            'defaultContent': ''
                        },
                        {
                        'data': 'user.createdAt',
                        'name': 'u.createdAt',
                        'render': function (data) {
                                if (data !== null) {
                                    return moment(data.date).format(Global.dateFormat);
                                }
                                return '';
                            }
                        },
                        {
                            'data': 'user.creator.username',
                            'name': 'cr.username',
                            'defaultContent': ''
                        },
                        {
                        'data': 'user.preferences',
                        'name': 'lastLoginIP',
                        'render': function (data) {
                                if (!$.isEmptyObject(data) && typeof data.lastLoginIP !== 'undefined') {
                                    return data.lastLoginIP;
                                }
                                return '';
                            }
                        },
                        {
                            'data': 'user.isActive',
                            'name': 'u.isActive',
                            'defaultContent': '',
                            'render': function(data, type, full) {
                                if(data == '1')
                                    return "Active";
                                return "Suspended"
                            }
                        },
                        {
                            'data': 'user',
                            'name': 'action',
                            'defaultContent': '',
                            'render': function(data, type, full) {


                                var action = "<a title='Edit User' class='btn btn-primary waves-effect waves-light btn-xs ' href='"+full.routes.update+"'>Edit</a>";
                                var suspend = "<a action='suspend' class='btn btn-danger waves-effect waves-light btn-xs active-state-action' title='Suspend User'>Suspend</a>";
                                var activate = "<a action='activate' class='btn btn-default waves-effect waves-light btn-xs active-state-action' title='Activate User'>Activate</a>";

                                var loggedInUserId = {{ app.user.id }};
                                if (loggedInUserId == data.id) {
                                    suspend = "";
                                }
                                {% if is_granted(['ROLE_USER_UPDATE']) %}
                                if (data.isActive === true) {
                                    action = suspend + ' ' + action;
                                } else {
                                    action = activate + ' ' + action;
                                }
                                {% endif %}

                                return action;
                            }
                        }
                    ]
                };
            }

        })(jQuery);
    </script>
    <script type="text/javascript" >
        $(function(){
            $('#userList').list({
                'url': {
                    'list': '{{ path("user.list_search") }}'
                },
                'rowOnclick': function (e, zTable) {
                    dataTable = zTable.dataTable.api();
                    e.preventDefault();
                    var currentRow = $(e.target).parents('tr');
                    if (currentRow.hasClass('child'))
                        currentRow = currentRow.prev();

                    var data = dataTable.row(currentRow).data() ;
                    var anchor = $(e.target).closest('a');
                    var mode = anchor.attr('action');

                    if (mode == 'suspend') {
                        suspendUser(data);
                    } else if (mode == 'activate') {
                        activateUser(data);
                    }
                }
            });
        });

        function activateUser(rowData)
        {
            var user = rowData.user;
            confirm2('Are you sure you want to activate '+ user.username , 'Activate User', {
                'type': null,
                'confirmButtonClass': 'btn-success btn-md',
                'confirmButtonText': 'Yes',
                'cancelButtonClass': 'btn-inverse btn-md',
                'cancelButtonText': 'Cancel',
                'html': true,
                'showLoaderOnConfirm': true
            }, function(isActivated) {
                if(isActivated) {
                    $.ajax({
                        url : "{{ path('user.activate') }}",
                        globalAjaxComplete : false,
                        type: "POST",
                        dataType: "JSON",
                        data: {
                            "userId": user.id
                        },
                        'success': function (data) {
                            var notifications = data.__notifications || [];
                            swal({
                                'type': notifications.type,
                                'title': notifications.title,
                                'text': notifications.message
                            }, function() {
                                $('#userList').trigger('refresh');
                            });
                        }
                    });
                }
            });
        }

        function suspendUser(rowData)
        {
            var user = rowData.user;
            confirm2('Are you sure you want to suspend '+ user.username , 'Suspend User', {
                'type': null,
                'confirmButtonClass': 'btn-success btn-md',
                'confirmButtonText': 'Yes',
                'cancelButtonClass': 'btn-inverse btn-md',
                'cancelButtonText': 'Cancel',
                'html': true,
                'showLoaderOnConfirm': true
            }, function(isSuspended) {
                if(isSuspended) {
                    $.ajax({
                        url : "{{ path('user.suspend') }}",
                        globalAjaxComplete : false,
                        type: "POST",
                        dataType: "JSON",
                        data: {
                            "userId": user.id
                        },
                        success : function (data) {
                            var notifications = data.__notifications || [];
                            swal({
                                'type': notifications.type,
                                'title': notifications.title,
                                'text': notifications.message
                            }, function() {
                                $('#userList').trigger('refresh');
                            });
                        }
                    });
                }
            });
        }
    </script>
{% endblock %}