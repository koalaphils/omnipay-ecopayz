{% extends 'AppBundle:Layout:base.html.twig' %}

{% block title -%} {{ "page.title.tag.list"|trans({}, "DWLBundle") }} {%- endblock title %}

{% block pageTitle -%} {{ "menus.dwl"|trans({},"DWLBundle") }} {%- endblock pageTitle %}

{% block pageHeaderExtra %}
     <div class="pull-right add-dwl">
        {% if is_granted('ROLE_DWL_CREATE') %}
        <button class="btn btn-primary waves-effect waves-light pull-right m-b-10" id="btnCreate" title = "Add DWL">
            <span><i class="ti-plus"></i></span>
           {{ "Add DWL"|trans({}, 'CountryBundle') }}
        </button>
        {% endif %}
     </div>
{% endblock pageHeaderExtra %}

{% block breadcrumb -%}
    <li>{{ "breadcrumb.finance"|trans({},"AppBundle") }}</li>
    <li class="active">{{ "page.title.header.list"|trans({},"DWLBundle") }}</li>
{%- endblock breadcrumb %}

{% block page -%}
    <div class="col-md-12">
        <div class="card-box">
            <div id="dwlList">
                <table id="datatable-responsive"
                    class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0"
                    width="100%">
                    <thead>
                        <tr>
                            <th>{{ "fields.id"|trans({}, "DWLBundle") }}</th>
                            <th data-priority="1">{{ "fields.date"|trans({}, "DWLBundle") }}</th>
                            <th>{{ "fields.product"|trans({}, "DWLBundle") }}</th>
                            <th>{{ "fields.dwl"|trans({}, "DWLBundle") }}</th>
                            <th>{{ "fields.totalRecord"|trans({}, "DWLBundle") }}</th>
                            <th data-priority="3">{{ "fields.status"|trans({}, "DWLBundle") }}</th>
                            <th data-priority="2">{{ "fields.action"|trans({}, "DWLBundle") }}</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot></tfoot>
                </table>
            </div>
        </div>
    </div>
{%- endblock page %}

{% block modals -%}
    <div id="formModal" class="modal fade" style="display: none;" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog modal-responsive">
            <div class="modal-conten p-0 b-0t">
                <div class="panel panel-color panel-inverse">
                    {{ form_start(form) }}
                    <div class="cls-dwl panel-inverse">
                        <h1>Upload DWL</h1>
                    </div>
                    <div class="panel-body p-20">
                        <div class='row'>
                            <div class="col-md-12">
                                <div class="alert alert-danger hide" id="dwlAlert">
                                    <h4><i class="fa fa-exclamation-circle"></i> DWL Exists</h4>
                                    <p>
                                        <span></span>
                                        <br/>
                                        Clik the link to go in DWL page
                                        <a href=""></a>
                                        And upload new version.
                                    </p>
                                </div>
                            </div>
                            {{ form_row(form.product) }}
                            {{ form_row(form.currency) }}
                            {{ form_row(form.date) }}
                            {{ form_row(form.file) }}
                            <div class="col-md-12">
                                <div class="progress hide">
                                    <div class="progress-bar progress-bar-primary" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                                        <span class="sr-only">0% Complete</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                   <div class="panel-footer text-right">
                        {{ form_widget(form.save, {'attr': {'class': 'btn-sm btn-success'}}) }}
                        <button class="btn btn-sm btn-inverse btnModalClose" data-dismiss="modal">Cancel</button>
                    </div>
                    {{ form_end(form) }}
                 </div>
             </div>
         </div>
     </div>
{%- endblock modals %}

{% block stylesheet_plugins %}
    {{ form_assetcss(form) }}
    {{ asset_add('css', asset('assets/plugins/select2/css/select2.min.css')) }}
    {{ asset_add('css',asset('assets/plugins/bootstrap-select/css/bootstrap-select.min.css')) }}
    {{ asset_add('css',asset("assets/plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css")) }}
    <link href="{{ asset('assets/plugins/datatables/jquery.dataTables.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/dataTables.colVis.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/dataTables.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>

    {{ asset_render('css') }}
{% endblock %}

{% block javascript_plugins %}
    <script src="{{ asset('bundles/app/js/ZTable.js') }}"></script>
    {{ form_assetjs(form) }}
    {{ asset_add('js', asset('assets/plugins/select2/js/select2.min.js')) }}
    {{ asset_add('js',asset('assets/plugins/bootstrap-select/js/bootstrap-select.min.js')) }}
    {{ asset_add('js',asset("assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js")) }}
    <script src="{{ asset('assets/plugins/jquery-form/jquery.form.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.bootstrap.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.buttons.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/vfs_fonts.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.html5.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.responsive.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.colVis.js') }}"></script>
    <script src="{{ asset('assets/plugins/bootstrap-filestyle/js/bootstrap-filestyle.min.js') }}"></script>
    {{ asset_render('js') }}
{% endblock %}

{% block javascripts %}
    {{ form_javascript(form) }}
    <script type="text/javascript" >
        var userPreferences = {{ app.user.getPreference('ui.dwl.list.column.visibility')|json_encode()|raw }};
        $(function(){
            var listTable = new ZTable('#dwlList',  {
                'autoloadTable': false,
                'colvis': {
                    'hidden': function () {
                        var hidden = [];
                        for (var i in userPreferences) {
                            if (userPreferences[i] == 'false') {
                                hidden.push(eval(i));
                            }
                        }

                        return hidden;
                    },
                    'hidden': [0],
                    'exclude': ['id']
                },
                'search': '{{ app.request.get('search', '')  }}',
                'featuresDom': "<'form-inline'"
                    + "<'form-group m-r-10 ft-date'<'xs-date'ft>>"
                    + "ftcps"
                    + "<'btn-group m-b-10'ob>>",
                'ajax': {
                    'url': '{{ path("dwl.list_search") }}'
                },
                'features': {
                    'from': {
                        'dom': "<'form-group form-group-sm m-r-10'<'input-group'i<^span 'input-group-addon bg-white text-default'<!'fa fa-calendar'!>>>>",
                        'type': 'date',
                        'label': 'From',
                        'symbol': 'f',
                        'applyOnChanged': false,
                        'attrs': {
                            'placeholder': 'From',
                            'type': 'input',
                            'class': 'form-control cls-date'
                        }
                    },
                    'to': {
                        'dom': "<'form-group form-group-sm m-r-10'<'input-group'i<^span 'input-group-addon bg-white text-default'<!'fa fa-calendar'!>>>>",
                        'type': 'date',
                        'label': 'To',
                        'symbol': 't',
                        'applyOnChanged': false,
                        'attrs': {
                            'placeholder': 'To',
                            'type': 'input',
                            'class': 'form-control cls-date'
                        }
                    },
                    'resetFilter': {
                        'type': 'button',
                        'label': 'Reset Filter',
                        'symbol': 'b',
                        'attrs': {
                            'type': 'button',
                            'class': 'btn btn-sm btn-inverse',
                            'style': 'border-radius: 3px;',
                            'title': 'Reset Filter'
                        },
                        'initialized': function (feature) {
                            $(feature.input).click(function () {
                                $("select.ztable_length_input").val('10').change();
                                feature.ztable.reset();
                            });
                        }
                    },
                    'applyFilter': {
                        'type': 'button',
                        'label': 'Apply Filter',
                        'symbol': 'o',
                        'attrs': {
                            'type': 'button',
                            'class': 'btn btn-sm btn-default',
                            'style': 'margin-right: 4px; border-radius: 3px;',
                            'title': 'Apply Filter'
                        },
                        'initialized': function (feature) {
                            $(feature.input).click(function () {
                                feature.ztable.reloadTable();
                            });
                        }
                    },
                    'currencies': {
                        'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                        'type': 'select',
                        'label': 'Currency',
                        'symbol': 'c',
                        'class': 'selectpicker',
                        'attrs': {
                            'data-style': 'btn-white btn-sm',
                            'multiple': 'multiple',
                            'data-none-selected-text': 'Select Currency',
                            'data-width': 'auto',
                            'data-size': 5
                        },
                        'resetValue': function (feature) {
                            $(feature.input).selectpicker('val', feature.feature.value);
                        },
                        'initialized': function (feature) {
                            $.ajax({
                                'url': '{{ path('currency.list_search') }}',
                                'type': 'POST',
                                'success': function (data) {
                                    var options = {};
                                    for (var i in data) {
                                        var option = $("<option value='" + data[i].id + "'>" + data[i].name + "</option>");
                                        if (feature.feature.value.indexOf(data[i].id + "") !== -1) {
                                            option.attr('selected', 'selected');
                                        }
                                        $(feature.input).append(option);
                                    }
                                    $(feature.input).selectpicker('refresh');
                                    feature.setToDone();
                                    feature.ztable.reloadTable();
                                }
                            });
                        },
                        'value': {{ app.request.get("currency", [])|json_encode|raw }}
                    },
                    'products': {
                        'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                        'type': 'select',
                        'label': 'Customer Status',
                        'symbol': 'p',
                        'class': 'selectpicker',
                        'attrs': {
                            'data-style': 'btn-white btn-sm',
                            'multiple': 'multiple',
                            'data-none-selected-text': 'Select Product',
                            'data-width': 'auto',
                            'data-size': 5
                        },
                        'resetValue': function (feature) {
                            $(feature.input).selectpicker('val', feature.feature.value);
                        },
                        'initialized': function (feature) {
                            $.ajax({
                                'url': '{{ path('product.list_search') }}',
                                'success': function (data) {
                                    var options = {};
                                    for (var i in data) {
                                        var option = $("<option value='" + data[i].id + "'>" + data[i].name + "</option>");
                                        if (feature.feature.value.indexOf(data[i].id + "") !== -1) {
                                            option.attr('selected', 'selected');
                                        }
                                        $(feature.input).append(option);
                                    }
                                    $(feature.input).selectpicker('refresh');
                                    feature.setToDone();
                                    feature.ztable.reloadTable();
                                }
                            });
                        },
                        'value': {{ app.request.get("product", [])|json_encode|raw }}
                    },
                    'status': {
                        'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                        'type': 'select',
                        'label': 'Customer Status',
                        'symbol': 's',
                        'class': 'selectpicker',
                        'attrs': {
                            'data-style': 'btn-white btn-sm',
                            'multiple': 'multiple',
                            'data-none-selected-text': 'Select Status',
                            'data-width': 'auto'
                        },
                        'applyOnChanged': false,
                        'resetValue': function (feature) {
                            $(feature.input).selectpicker('val', feature.feature.value);
                        },
                        'getValue': function (feature) {
                            var value = $(feature.input).val();
                            if (value === null) {
                                value = [];
                            }
                            var statuses = [];
                            if (value.length > 0 && value.indexOf('uploading') !== Global.variables.indexNotFound) {
                                statuses.push(Global.dwl.status.uploaded.value);
                                statuses.push(Global.dwl.status.processing.value);
                            }
                            if (value.length > 0 && value.indexOf('uploaded') !== Global.variables.indexNotFound) {
                                statuses.push(Global.dwl.status.processed.value);
                            }
                            if (value.length > 0 && value.indexOf('submiting') !== Global.variables.indexNotFound) {
                                statuses.push(Global.dwl.status.submited.value);
                                statuses.push(Global.dwl.status.transacting.value);
                            }
                            if (value.length > 0 && value.indexOf('submited') !== Global.variables.indexNotFound) {
                                statuses.push(Global.dwl.status.completed.value);
                            }

                            return statuses;
                        },
                        'rendered': function (feature) {
                            $(feature.input).val(feature.feature.value);
                        },
                        'choices': {
                            'uploading': 'Uploading',
                            'uploaded': 'Uploaded',
                            'submiting': 'Submiting',
                            'submited': 'Submitted'
                        },
                        'value': {{ app.request.get("status", [])|json_encode()|raw  }}
                    }
                },
                'columns': [
                    {'name': 'id', 'data': 'id', 'defaultContent': ''},
                    {
                        'data': 'date',
                        'name': 'date',
                        'render': function (data) {
                            if (data !== null) {
                                return moment(data).format(Global.dateFormat);
                            }
                            return '';
                        }
                    },
                    {'data': 'product.name', 'name': 'productName', 'defaultContent': ''},
                    {'data': 'currency.code', 'name': 'currencyCode', 'defaultContent': ''},
                    {'data': 'details.total.record', 'name': 'totalRecord', 'defaultContent': ''},
                    {
                        'data': 'statusText',
                        'name': 'status',
                        'render': function (data) {
                            if (data === null) {
                                return 'None';
                            }

                            var group = Global.dwl.status[data].group;
                            if (group === 'uploaded') {
                                return '{{ 'status.uploaded'|trans({}, 'DWLBundle') }}';
                            } else if (group === 'uploading') {
                                return '{{ 'status.uploading'|trans({}, 'DWLBundle') }}';
                            } else if (group === 'submiting') {
                                return '{{ 'status.submiting'|trans({}, 'DWLBundle') }}';
                            } else {
                                return '{{ 'status.submited'|trans({}, 'DWLBundle') }}';
                            }
                        }
                    },
                    {
                        'data': '@link',
                        'name': 'actions',
                        'render': function (data, type, dwl) {
                            if (data !== null) {
                                var link = '<a href="' + data + '" class="btn btn-primary btn-xs dropdown-toggle waves-effect" title="View Product">View</a>';
                                var exportButtonHtml = '  <a href="' + "{{ path('dwl.export', {'id': '__id__'}) }}".replace('__id__', dwl.id) + '" class="btn btn-warning btn-xs dropdown-toggle waves-effect" title="Export Data">Export</a>';
                                if (dwl.canBeExported === true) {
                                    link += exportButtonHtml;
                                }
                                return link;
                            }
                        }
                    }
                ]
            });

            $('#dwlList').on('ztable.change.column.visible', function (e, colvis, ztable) {
                saveUserPreferences({'ui.transaction.list.column.visibility': ztable.getColumnVisibility()});
            });

            $('#dwlList').on('ztable.change.column.visible', function (e, colvis, ztable) {
                saveUserPreferences({'ui.dwl.list.column.visibility': ztable.getColumnVisibility()});
            });

            $('#formModal').on('hidden.bs.modal', function (e) {
                $('#formModal').trigger('changeData', []);
                $('#{{ form.product.vars.id }}').val(null).trigger("change");
                $('#{{ form.currency.vars.id }}').val(null).trigger("change");
                $('#{{ form.date.vars.id }}').val(null);
                $('#{{ form.file.vars.id }}').val(null).trigger('change');
                $('.progress').addClass('hide');
                $('.progress .progress-bar').attr('aria-valuenow', 0);
                $('.progress .progress-bar').css('width', 0 + '%');
                $('#dwlAlert').addClass('hide');
                $('#dwlAlert p span').html('');
                $('#dwlAlert p a').html('');
                $('#dwlAlert p a').attr('href', '');
                $('.form-group').removeClass('has-error');
                $('.form-group').find('.help-block ul').html('');
            });

            $('#btnCreate').click(function (e) {
                $('#formModal').trigger('changeData', []);
                $('#formModal').modal('show');
            });

            $('#dwlList').on('click', 'tr td a.update', function (e) {
                e.preventDefault();
                var tr = $(e.target).closest('tr');
                var data = listTable.dataTable.api().row(tr).data();
                $('#formModal').trigger('changeData', [data]);
                $('#formModal').modal('show');
            });
        });
    </script>

    <script type="text/javascript" >
       $('#{{ form.vars.id }}').ajaxForm({
            'url': '{{ path('dwl.save') }}',
            'type': 'POST',
            'cache': false,
            'contentType': false,
            'processData': false,
            'xhr': function() {
                var uploadXhr = $.ajaxSettings.xhr();
                if (uploadXhr.upload) {
                    uploadXhr.upload.addEventListener('progress', function(e) {
                        if(e.lengthComputable){
                            var max = e.total;
                            var current = e.loaded;

                            var Percentage = (current * 100)/max;
                            $('.progress .progress-bar').attr('aria-valuenow', Percentage);
                            $('.progress .progress-bar').css('width', Percentage + '%');
                        }
                    }, false);
                }
                return uploadXhr;
            },
            'beforeSend': function () {
                $('.progress').removeClass('hide');
                $('.progress .progress-bar').attr('aria-valuenow', 0);
                $('.progress .progress-bar').css('width', 0 + '%');
                $('#dwlAlert').addClass('hide');
                $('#dwlAlert p span').html('');
                $('#dwlAlert p a').html('');
                $('#dwlAlert p a').attr('href', '');
                $('.form-group').removeClass('has-error');
                $('.form-group').find('.help-block ul').html('');
            },
            'success': function (result) {
                setTimeout(function() {
                    window.location = '{{ path('dwl.update_page', {'id': '__id__'}) }}'.replace('__id__', result.data.id);
                }, 2000);
            },
            'statusCode': {
                '422': function (jqXHR) {
                    $(this).data('global-ajax-error', false);
                    $.each(jqXHR.responseJSON.errors, function(i, e) {
                        if (i == 'DWLUpload') {
                            $('#dwlAlert').removeClass('hide');
                            $('#dwlAlert p span').html(this);
                            $('#dwlAlert p a').attr('href', jqXHR.responseJSON.data.path);
                            $('#dwlAlert p a').html(jqXHR.responseJSON.data.path);
                        }
                        $('#' + i).closest('.form-group').addClass('has-error');
                        $('#' + i).closest('.form-group').find('.help-block').find('ul').append('<li><span class="glyphicon glyphicon-exclamation-sign"></span> '+ this +'</li>');
                    });
                }
            }
       });
    </script>
{% endblock %}