{% extends 'TransactionBundle:Transaction:transaction.html.twig' %}

{% form_theme form with ["TransactionBundle:Transaction/Theme:script.html.twig", "TransactionBundle:Transaction/Theme:style.html.twig", "TransactionBundle:Transaction/Theme:form.html.twig", _self] %}

{% block _Transaction_subTransactions_errors -%}
    {% if errors|length > 0 -%}
    <div class="alert alert-danger">
        <ul class="list-unstyled">
            {%- for error in errors -%}
                <li><span class="glyphicon glyphicon-exclamation-sign"></span> {{ error.message }}</li>
            {%- endfor -%}
        </ul>
    </div>
    {%- endif %}
{%- endblock %}

{% block breadcrumb -%}
    <li>{{ "breadcrumb.transaction"|trans({},"AppBundle") }}</li>
    <li>
        <a href="{{ path("transaction.list_page") }}">{{ "breadcrumb.list"|trans({},"TransactionBundle") }}</a>
    </li>
    <li class="active">Transfer</li>
{%- endblock %}

{% block _Transaction_subTransactions_row %}
    <div id="{{ form.vars.id }}" data-index="0" class="transfer-products">
        {{ form_errors(form) }}
        <div class="card-box">
            <h4 class="header-title m-b-30 m-t-0">
                From Products
                {%- if form.vars.addSubtransaction -%}
                {# &nbsp;&nbsp;|<button type="button" class="btn btn-success btn-xs m-l-10 btn-add-from-product"><i class="fa fa-plus" title="Add Product"></i></button> #}
                {%- endif %}
            </h4>
            <div class="from-product-list">
            </div>
        </div>
        <div class="card-box">
            <h4 class="header-title m-b-30 m-t-0">
                To Products
                {%- if form.vars.addSubtransaction -%}
                {# &nbsp;&nbsp;|<button type="button" class="btn btn-success btn-xs m-l-10 btn-add-to-product"><i class="fa fa-plus" title="Add Product"></i></button> #}
                {%- endif %}
            </h4>
            <div class="to-product-list">
            </div>
              <div class="integration-error-message help-block text-danger">
                </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        var products = null;
        function customerProductLoad(data) {
            products.clear();

            products.setProducts(data);
            {% for child in form.subTransactions.children -%}
                {%- if child.vars.data.type == 1 -%}
                    products.add({
                        'type': '{{ child.vars.data.type }}',
                        'customerProduct': '{{ child.vars.data.customerProduct.id|default(null) }}',
                        'immutableCustomerProductData': '{{ child.vars.data.immutableCustomerProductData|default(null) }}',
                        'showImmutableCustomerProductData': '{{  child.vars.value.parent.isClosedForFurtherProcessing  }}',
                        'amount': '{{ child.vars.data.amount }}',
                        'enabled': false,
                        'renderTo': '.to-product-list',
                        'hasFailedWithIntegration': '{{ child.vars.data.getFailedProcessingWithIntegration() }}',
                        'errors': {{ form_errors(child) }},
                        'hasFee': {{ (child.vars.data.details.hasFee|default(false)) ? "true" : "false" }},
                        'bitcoinRequestedAmount' : {% if child.vars.data.details.bitcoin.requested_btc is defined -%} {{ child.vars.data.details.bitcoin.requested_btc | round_format(8, '.', ',', constant('AppBundle\\ValueObject\\Number::ROUND_DOWN')) }} {%- else -%} 0 {% endif -%},
                        'hasBalanceAdjusted': '{{ child.vars.data.hasBalanceAdjusted() }}'
                    });
                {%- elseif child.vars.data.type == 2 -%}
                    products.add({
                        'type': '{{ child.vars.data.type }}',
                        'customerProduct': '{{ child.vars.data.customerProduct.id|default(null) }}',
                        'immutableCustomerProductData': '{{ child.vars.data.immutableCustomerProductData|default(null) }}',
                        'showImmutableCustomerProductData': '{{  child.vars.value.parent.isClosedForFurtherProcessing  }}',
                        'amount': '{{ child.vars.data.amount }}',
                        'enabled': false,
                        'renderTo': '.from-product-list',
                        'errors': {{ form_errors(child) }},
                        'hasFee': {{ (child.vars.data.details.hasFee|default(false)) ? "true" : "false" }},
                        'bitcoinRequestedAmount' : {% if child.vars.data.details.bitcoin.requested_btc is defined -%} {{ child.vars.data.details.bitcoin.requested_btc | round_format(8, '.', ',', constant('AppBundle\\ValueObject\\Number::ROUND_DOWN')) }} {%- else -%} 0 {% endif -%},
                        'hasBalanceAdjusted': '{{ child.vars.data.hasBalanceAdjusted() }}'
                    });
                {%- endif -%}
            {% else %}
            products.add({
                'type': 2,
                'customerProduct': null,
                'amount': 0,
                'enabled': true,
                'renderTo': '.from-product-list'
            });
            products.add({
                'type': 1,
                'customerProduct': null,
                'amount': 0,
                'enabled': true,
                'renderTo': '.to-product-list'
            });
            {%- endfor %}

            $('.remove-product-button').hide();
        }

        $(function() {
            $('#{{ form.customer.vars.id }}').on('select2:select', function(event) {
                products.clear();
            });

            $('.btn-add-from-product').click(function() {
                products.add({
                    'type': 2,
                    'customerProduct': null,
                    'amount': 0,
                    'enabled': true,
                    'renderTo': '.from-product-list'
                });
            });

            $('.btn-add-to-product').click(function() {
                products.add({
                    'type': 1,
                    'customerProduct': null,
                    'amount': 0,
                    'enabled': true,
                    'renderTo': '.to-product-list'
                });
            });

            var subTransactionPrototype = '{{ form_row(form.subTransactions.vars.prototype)|e('js') }}';

            products = new Products("transfer",{
                'prototype': subTransactionPrototype,
                'elem': '#{{ form.subTransactions.vars.id }} .from-product-list'
            });

            $('#{{ form.customer.vars.id }}').trigger('select2:select');
        });
    </script>
{% endblock %}

{% block summary_template %}
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
    <xsl:output method="xml"/>
    <xsl:template match="transaction">
        <div class='card-box'>
        <div class='card-box'>
            <div class='row'>
                <div class='col-md-6 col-sm-12 col-xs-12'>
                    <b>{{ "Status"|trans({},"TransactionBundle") }}</b>
                </div>
                <div class='col-md-6 col-sm-12 col-xs-12 '>
                    <xsl:choose>
                        <xsl:when test="statusinfo/id = 2 and voided = 1">
                            <span class="label label-danger">{{ "Voided"|trans({}, "TransactionBundle") }}</span>
                        </xsl:when>
                        <xsl:when test="statusinfo/id = 3">
                            <span class="label label-danger"><xsl:value-of select="statusinfo/label"/></span>
                        </xsl:when>
                        <xsl:otherwise>
                            <span class="label label-success"><xsl:value-of select="statusinfo/label"/></span>
                        </xsl:otherwise>
                    </xsl:choose>
                </div>
            </div>
            <div class='row'>
                <div class='col-md-12 col-sm-12 col-xs-12'>
                    <b>{{ "Transaction Number"|trans({},"TransactionBundle") }}</b>
                </div>
                <div class='col-md-12 col-sm-12 col-xs-12 '>
                    <span><xsl:value-of select="number"/></span>
                </div>
            </div>
        </div>
        <div class='card-box'>
            <h4 class="header-title m-t-0">{{ "Products"|trans({}, "TransactionBundle") }}</h4>
            <hr />
            <xsl:choose>
                <xsl:when test='not ((status = 2) or (status = 3))'>
                <div class='row'>
                    <div class='col-sm-5 col-xs-5'><b>{{ "Product"|trans({}, "TransactionBundle") }}</b></div>
                    <div class='col-sm-4 col-xs-4'><b>{{ "Current"|trans({}, "TransactionBundle") }}</b></div>
                    <div class='col-sm-3 col-xs-3'><b>{{ "After"|trans({}, "TransactionBundle") }}</b></div>
                </div>
                <xsl:for-each select="subtransactions/i">
                    <div class='row subtransaction'>
                        <xsl:attribute name='data-index'>
                            <xsl:value-of select='index' />
                        </xsl:attribute>
                        <xsl:choose>
                            <xsl:when test="customerproduct/immutablecustomerproductdata">
                                <div class='col-sm-5 col-xs-5'><span><xsl:value-of select="customerproduct/product/name"/></span> (<span><xsl:value-of select="customerproduct/immutablecustomerproductdata"/></span>)</div>
                            </xsl:when>
                            <xsl:otherwise>
                                <div class='col-sm-5 col-xs-5'><span><xsl:value-of select="customerproduct/product/name"/></span> (<span><xsl:value-of select="customerproduct/username"/></span>)</div>
                            </xsl:otherwise>
                        </xsl:choose>
                        <div class='col-sm-4 col-xs-4'><span><xsl:value-of select="customerproduct/balance"/></span></div>
                        <div class='col-sm-3 col-xs-3'><span><xsl:value-of select="afterbalance"/></span></div>
                    </div>
                </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                <div class='row'>
                    <div class='col-sm-4 col-xs-4'><b>{{ "Product"|trans({}, "TransactionBundle") }}</b></div>
                    <div class='col-sm-8 col-xs-8'><b>{{ "Balance"|trans({}, "TransactionBundle") }}</b></div>
                </div>
                <xsl:for-each select="subtransactions/i">
                    <div class='row subtransaction'>
                        <xsl:attribute name='data-index'>
                            <xsl:value-of select='index' />
                        </xsl:attribute>
                        <xsl:choose>
                            <xsl:when test="customerproduct/immutablecustomerproductdata">
                                <div class='col-sm-4 col-xs-4'><span><xsl:value-of select="customerproduct/product/name"/></span> (<span><xsl:value-of select="customerproduct/immutablecustomerproductdata"/></span>)</div>
                            </xsl:when>
                            <xsl:otherwise>
                                <div class='col-sm-4 col-xs-4'><span><xsl:value-of select="customerproduct/product/name"/></span> (<span><xsl:value-of select="customerproduct/username"/></span>)</div>
                            </xsl:otherwise>
                        </xsl:choose>
                        <div class='col-sm-8 col-xs-8'><span><xsl:value-of select="customerproduct/balance"/></span></div>
                    </div>
                </xsl:for-each>
                </xsl:otherwise>
            </xsl:choose>
        </div>

        <div class='card-box'>
            <div class='row'>
                <div class='col-md-6 col-sm-6 col-xs-6'>
                    <b>{{ "Total Amount"|trans({},"TransactionBundle") }}</b>
                </div>
                <div class='col-md-6 col-sm-6 col-xs-6 '>
                    <span><xsl:value-of select="sum_withdraw_products"/></span>
                </div>
            </div>
        </div>
        </div>
    </xsl:template>
</xsl:stylesheet>
{% endblock summary_template %}

{% block _Transaction_customerFee_widget %}
{% endblock %}

{% block _Transaction_companyFee_widget %}
{% endblock %}

{% block gateway %}
    <div class="card-box hide" id="gateway-container">
        <h4 class="m-t-0 m-b-30 header-title">{{ "Payment Gateway"|trans({},'TransactionBundle') }}</h4>
        <div class="form-group {% if form.gateway.vars.errors|length > 0 %} has-error {% endif %}">
            {{ form_widget(form.gateway) }}
            {{ form_errors(form.gateway) }}
        </div>
        <div class="text-muted">
            <div class="text-muted">
                <div class="row m-t-10">
                    <div class="col-md-3 text-right"><b>Currency:</b></div>
                    <div class="col-md-8 m-l-15 gateway-data" data-field="currency.name"></div>
                </div>
            </div>
        </div>
    </div>
{% endblock gateway %}