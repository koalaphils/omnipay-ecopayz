{% extends 'AppBundle:Layout:base.html.twig' %}

{% form_theme form "PaymentOptionBundle:Form:paymentOption.html.twig" %}

{% block title %}{{ "page.title.create"|trans({},"PaymentOptionBundle") }}{% endblock %}

{% block stylesheet_plugins %}
    {{ form_assetcss(form) }}
{% endblock %}

{% block javascript_plugins %}
    {{ form_assetjs(form) }}
{% endblock %}

{% block pageTitle %}{{ "page.Create Payment Option"|trans({}, 'PaymentOptionBundle') }}{% endblock pageTitle %}

{% block pageHeaderExtra %}
    <div class="pull-right">
        {% if is_granted('ROLE_PAYMENTOPTION_VIEW') %}
        <a class="btn btn-inverse waves-effect waves-light pull-right m-b-10" href="{{ path("paymentoption.list_page") }}"> <span><i class="ti-arrow-left m-r-5"></i></span> {{ "Back to Payment Option List"|trans({}, 'PaymentOptionBundle') }}</a>
        {% endif %}
        <ul class="list-inline quicklinks font-13 font-normal text-right">
            {% if is_granted(['ROLE_COUNTRY_VIEW' , 'ROLE_TRANSACTION_VIEW' , 'ROLE_USER_VIEW']) %}
            <li>Quick Links:</li>
            {% endif %}
            {% if is_granted('ROLE_COUNTRY_VIEW') %}
            <li><a href="{{ path("country.list_page") }}">{{ "Country"|trans({}, 'PaymentOptionBundle') }}</a></li>|
            {% endif %}
            {% if is_granted('ROLE_TRANSACTION_VIEW') %}
            <li><a href="{{ path("transaction.list_page") }}">{{ "Transaction History"|trans({}, 'PaymentOptionBundle') }}</a></li>|
            {% endif %}
            {% if is_granted('ROLE_USER_VIEW') %}
            <li><a href="{{ path("group.list_page") }}">{{ "User Group"|trans({}, 'PaymentOptionBundle') }}</a></li>
            {% endif %}
        </ul>
    </div>    
{% endblock pageHeaderExtra %}

{% block breadcrumb -%}
    <li>{{ "breadcrumb.setting"|trans({},"AppBundle") }}</li>
    <li>
        <a href="{{ path("paymentoption.list_page") }}">{{ "breadcrumb.list"|trans({},"PaymentOptionBundle") }}</a>
    </li>
    <li class="active">
        {{ "breadcrumb.create"|trans({},"PaymentOptionBundle") }}
    </li>
{%- endblock %}

{% block page %}
    <div class="col-sm-12">
        {{ form_start(form) }}
            <div class="card-box">
                <div class="row">
                    {{ form_widget(form) }}
                </div>
            </div>
        {{ form_end(form) }}
        <div class="card-box">
            <div class="row">
                <div class="col-md-12">
                    <button id="btnSave" class="btn btn-success">Save</button>
                </div>
            </div>
        </div>
    </div>
{% endblock page %}

{% block javascripts %}
    {{ form_javascript(form) }}
    <script type="text/javascript">
        var fieldPrototype = "{{- form_row(form.fields.vars.prototype)|e('js') -}}";
        var newId = 0;
        $(function() {
            $('#{{ form.vars.id }}').on('click', '.btn-add-field', function(e) {
                var newField = fieldPrototype;
                newField = newField.replace(/{{ form.fields.vars.prototype.vars.name }}/g, newId);
                $('.fields').append(newField);
                newId++;
            });
            
            $('#{{ form.vars.id }}').on('click','.btn-remove-field', function() {
                $(this).closest('.field').remove();
            });
            
            $('#{{ form.vars.id }}').submit(function (e) {
                e.preventDefault();
                var form = this;
                var data = $(form).serialize();
                $.ajax({
                    'url': $(form).attr('action'),
                    'context': form,
                    'type': $(form).attr('method'),
                    'dataType': 'json',
                    'success': function (data) {
                        if (data.success) {
                            notification('Saved', 'You have successfully saved customer group', 'success');
                            setTimeout(function () {
                                window.location = data.data['@link'];
                            }, 2000);
                        } else if (typeof data.errors !== 'undefined') {
                            for (var i in data.errors) {
                                var error = data.errors[i];
                                $('#' + error.formId)
                                    .closest('.form-group').addClass('has-error')
                                    .find('.help-block ul')
                                    .append('<li>' + error.message + '</li>');
                            }
                        }
                    },
                    'complete': function (xhr, textStatus) {
                        $('#btnSave').removeAttr('disabled');
                    },
                    'statusCode': {
                        
                    },
                    'data': data,
                    'beforeSend': function (xhr) {
                        $('#{{ form.vars.id }}').find('.form-group').removeClass('has-error');
                        $('#{{ form.vars.id }}').find('.help-block ul li').remove();
                        $('#btnSave').attr('disabled', 'disabled');
                    }
                });
            });
            
            $('#btnSave').click(function () {
                $('#{{ form.vars.id }}').submit();
            });
        });
    </script>
{% endblock %}