{% extends 'AppBundle:Layout:base.html.twig' %}

{% form_theme customerProductForm _self %}
{% form_theme securityForm _self %}
{% form_theme contactForm 'CustomerBundle:Form:Type/contact.html.twig' %}
{% form_theme socialForm 'CustomerBundle:Form:Type/social.html.twig' %}
{% form_theme paymentForm 'CustomerBundle:Form:Type/payment.html.twig' %}
{% form_theme form 'CustomerBundle:Form:Type/customer.html.twig' %}

{% block title %}{{ "page.title.update"|trans({'%name%':customer.fName ~ ' ' ~ customer.lname},"CustomerBundle") }}{% endblock %}

{% block form_label_class %}{% endblock %}

{% block form_group_class %}
{% endblock %}

{%- block form_start -%}
    {% set method = method|upper %}
    {%- if method in ["GET", "POST"] -%}
        {% set form_method = method %}
    {%- else -%}
        {% set form_method = "POST" %}
    {%- endif -%}
    <form name="{{ name }}" class="form-danger" method="{{ form_method|lower }}"{% if action != '' %} id="{{ id }}" action="{{ action }}"{% endif %}{% for attrname, attrvalue in attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}{% if multipart %} enctype="multipart/form-data"{% endif %}>
    {%- if form_method != method -%}
        <input type="hidden" name="_method" value="{{ method }}" />
    {%- endif -%}
{%- endblock form_start -%}

{% block stylesheet_plugins %}
    <link rel="stylesheet" type="text/css" href="{{ asset("assets/plugins/dropzone/dropzone.css") }}" />
    <link rel='stylesheet' type="text/css" href="{{ asset("assets/plugins/x-editable/css/bootstrap-editable.css") }}" />
    {{ form_assetcss(form) }}
    {{ form_assetcss(customerProductForm) }}
    {{ form_assetcss(securityForm) }}
{% endblock %}

{% block javascript_plugins %}
    <script type="text/javascript" src="{{ asset("assets/plugins/dropzone/dropzone.js") }}"></script>
    <script src="{{ asset('assets/plugins/datatables/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.bootstrap.js') }}"></script>

    <script src="{{ asset('assets/plugins/datatables/dataTables.buttons.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/vfs_fonts.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.html5.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.responsive.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.colVis.js') }}"></script>
    <script src="{{ asset('assets/plugins/x-editable/js/bootstrap-editable.min.js') }}"></script>
    {{ form_assetjs(form) }}
    {{ form_assetjs(customerProductForm) }}
    {{ form_assetjs(securityForm) }}
{% endblock %}

{% block stylesheets -%}
    <link rel="stylesheet" type="text/css" href="{{ asset('bundles/customer/css/document.css') }}" />
    <style rel="stylesheet">
        .payment-list {
            
        }
        
        .payment-list .payment-item {
            border: 1px #98a6ad solid;
            margin: 5px;
            height: 100px;
            max-height: 100px;
            background: #f5f5f5;
            padding: 5px;
            display: table;
            vertical-align: middle;
        }
        
        .payment-list .payment-item:hover {
            background: #a9f4ff;
            cursor: pointer;
        }
        
        .payment-list .payment-item.selected {
            background: #4ea5e0;
            border-color: #2581b8;
            color: #ecf0f1;
        }
        
        .payment-list .payment-item .payment-img {
            height: 100%;
            border-right: 1px #98a6ad solid;
            display: table-cell;
            vertical-align: middle;
            text-align: center;
            float: none;
        }
        
        .payment-list .payment-item .payment-info {
            display: table-cell;
            height: 100%;
            float: none;
        }
        
        .payment-list .payment-item .payment-img img {
            max-height: 90%;
            max-width: 90%;
            width: auto;
            height: auto;
        }
    </style>
{%- endblock %}

{% block pageTitle -%}{{ "page.Update Customer"|trans({},"CustomerBundle") }}{%- endblock %}

{% block breadcrumb -%}
    <li>
        <a href="{{ path("app.dashboard_page") }}">{{ "menus.Dashboard"|trans({},"AppBundle") }}</a>
    </li>
    <li>
        <a href="{{ path("customer.list_page") }}">{{ "menus.Customer"|trans({},"CustomerBundle") }}</a>
    </li>
    <li class="active">
        {{ customer.user.username }}
    </li>
{%- endblock  %}
    
{% block page %}
    {% if not customer.isVerified -%}
    <div class="card alert alert-warning" style="background-color: #fcf8e3;border-color: #faebcc;">
        <h4><i class="fa fa-warning"></i> {{ "Customer not verified"|trans({},'CustomerBundle') }}</h4>
        <p>{{ "This customer has not been verified and may be unable to create transaction"|trans({}, 'CustomerBundle') }} <a href="#verifiy" id="verify" class="alert-link">{{ "Verify this customer"|trans({}, 'CustomerBundle') }}</a></p>
    </div>
    {%- endif %}
    <div class="col-sm-12">
        <div class="tabs-vertical-env">
            {% include "CustomerBundle:Default:customer_tabs.html.twig" %}
            <div class="tab-content" style="width : 100%">
                {% if app.request.attributes.get('_route') == 'customer.update_page' %}
                <div class="tab-pane active" id="profile">
                    {% include "CustomerBundle:Form:customer-form.html.twig" %}
                </div>
                <div class="tab-pane" id="product">
                    {% include "CustomerBundle:Default:Tabs/products.html.twig" %}                    
                </div>
                <div class="tab-pane" id="security">
                    {% include "CustomerBundle:Form:customerSecurity-form.html.twig" %}
                </div>
                <div class="tab-pane" id="contacts">
                    {% include "CustomerBundle:Form:customerContacts-form.html.twig" %}
                </div>
                <div class="tab-pane" id="socials">
                    {% include "CustomerBundle:Form:customerSocials-form.html.twig" %}
                </div>
                <div class="tab-pane" id="payments">
                    {% include "CustomerBundle:Default:Tabs/payments.html.twig" %}          
                </div>
                <div class="tab-pane" id="docs">
                    {% include "CustomerBundle:Form:customerDocuments-form.html.twig" %}
                </div>
                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('bundles/customer/js/product.js') }}" type="text/javascript" ></script>
    <script src="{{ asset('bundles/customer/js/document.js') }}" type="text/javascript" ></script>
    <script src="{{ asset('bundles/customer/js/payments.js') }}" type="text/javascript" ></script>
    {{ form_javascript(form) }}
    {{ form_javascript(customerProductForm) }}
    {{ form_javascript(contactForm) }}
    {{ form_javascript(socialForm) }}
    {{ form_javascript(paymentForm) }}
    <script type="text/javascript">
        
        var cproductId = '';
        $(function(){
            $('#customerProductModal').on('hide.bs.modal', function() {
                cproductId = '';
                $('#{{ customerProductForm.userName.vars.id  }}').val('');
                $("#{{ customerProductForm.product.vars.id  }}").append("<option value='' selected='selected'></option>");
                $('#{{ customerProductForm.balance.vars.id  }}').val('');
                changeSwitcheryState({{ customerProductForm.isActive.vars.id  }}, true);
                $('#{{ customerProductForm.vars.id }}').find('.form-group').removeClass('has-error');
                $('#{{ customerProductForm.vars.id }}').find('.form-group .help-block ul').html('');
                $("#{{ customerProductForm.saveModal.vars.id }}").removeAttr('disabled');
            });
            $('#customerProductModal').on('show.bs.modal', function() {
                if(cproductId == '') {
                    $('#customerProductModal .update').addClass('hide');
                    $('#customerProductModal .new').removeClass('hide');
                } else {
                    $('#customerProductModal .new').addClass('hide');
                    $('#customerProductModal .update').removeClass('hide');
                }
            });
            $('#customerProductList').productList({
                'url': {
                    'list': '{{ path("customerProduct.list_search" , {'id': customer.id})  -}}'
                },
                'rowOnclick': function(event, dataTable) {
                    event.preventDefault();                    
                    var row = $(event.target).closest('tr');
                    var data = dataTable.row(row).data();
                    
                    cproductId = '/' + data.id;
                    $('#customerProductModal .update .id').html(data.id);
                    $('#customerProductModal').modal("show");
                    $('#{{ customerProductForm.userName.vars.id  }}').val(data.userName);
                    $("#{{ customerProductForm.product.vars.id  }}").append("<option value='" + data.product.id +"' selected='selected'>" + data.product.name +"</option>");
                    $('#{{ customerProductForm.balance.vars.id  }}').val((new Decimal(data.balance)).toFixed(2));
                    changeSwitcheryState({{ customerProductForm.isActive.vars.id  }}, data.isActive);
                }
            });

            function changeSwitcheryState(el,value){
                if($(el).is(':checked') != value){
                    $(el).trigger("click");
                }
            }
            
            $('#{{ customerProductForm.saveModal.vars.id }}').click(function () {
                $.ajax({
                    url: "{{path('customerProduct.save') }}" + cproductId ,
                    type: "POST",
                    dataType: "JSON",
                    data:  $("form[name={{ customerProductForm.vars.id }}]").serialize(),
                    'beforeSend': function() {
                        $('#{{ customerProductForm.vars.id }}').find('.form-group').removeClass('has-error');
                        $('#{{ customerProductForm.vars.id }}').find('.form-group .help-block ul').html('');
                        $("#{{ customerProductForm.saveModal.vars.id }}").attr('disabled', 'disabled');
                    },
                    'statusCode': {
                        '422': function(jqXHR) {
                            $(this).data('global-ajax-error', false);
                            $.each(jqXHR.responseJSON.errors, function(i, e) {
                                $('#' + i).closest('.form-group').addClass('has-error');
                                $('#' + i).next().find('ul').append('<li><span class="glyphicon glyphicon-exclamation-sign"></span> '+ this +'</li>');
                            });
                        }
                    },
                    success: function(data){
                        if(data.status) {

                            var m = data.message;
                            var t = data.message.text;
                            if (t instanceof Array) {
                                for (i = 0; i < t.length; i++) { 
                                    $.Notification.notify(m.type ,'top center', m.title, t[i]);
                                }
                            } else {
                                $('#customerProductList').trigger('refresh');
                                $.Notification.notify(m.type ,'top center', m.title, m.text);
                                cproductId = '/' + data.result;
                                $('#customerProductModal .new').addClass('hide');
                                $('#customerProductModal .update').removeClass('hide');
                                $('#customerProductModal .update .id').html(data.result);
                            }
                            
                            
                        } else {
                            console.log('Message: ' + JSON.stringify(data.message));
                        }
                    },
                    'complete': function(jqXHR) {
                        $("#{{ customerProductForm.saveModal.vars.id }}").removeAttr('disabled');
                    }
                }); 
                
            });
        });
    </script>
    <script type="text/javascript">
        var xhr = {'password':null, 'transactionPassword': null};
        $(function() {
            $('#{{ securityForm.vars.id }}').submit(function(e) {
                e.preventDefault();
                var clicked = $(this).find('button[clicked="clicked"]').attr('name');
                if(clicked == '{{ securityForm.savePassword.vars.full_name }}') {
                    var _xhr = 'password';
                } else if(clicked == '{{ securityForm.saveTransactionPassword.vars.full_name }}') {
                    var _xhr = 'transactionPassword';
                } else var _xhr = 'undefined';
                
                if(xhr[_xhr]) xhr[_xhr].abort();
                
                xhr[_xhr] = $.ajax({
                    'url': $(this).attr('action'),
                    'type': $(this).attr('method'),
                    'data': $(this).serialize() + "&" + clicked + "=",
                    'beforeSend': function() {
                        if(_xhr == 'password') {
                            $('#{{ securityForm.user.password.first.vars.id }}').closest('.form-group').removeClass('has-error');
                            $('#{{ securityForm.user.password.first.vars.id }}').next().find('ul').html('');
                        } else if(_xhr == 'transactionPassword') {
                            $('#{{ securityForm.transactionPassword.first.vars.id }}').closest('.form-group').removeClass('has-error');
                            $('#{{ securityForm.transactionPassword.first.vars.id }}').next().find('ul').html('');
                        }
                        $('button[name="' + clicked + '"]').attr('disabled', 'disabled');
                    },
                    'statusCode': {
                        '422': function(jqXHR) {
                            $(this).data('global-ajax-error', false);
                            $.each(jqXHR.responseJSON.errors, function(i, e) {
                                $('#' + i).closest('.form-group').addClass('has-error');
                                $('#' + i).next().find('ul').append('<li><span class="glyphicon glyphicon-exclamation-sign"></span> '+ this +'</li>');
                            });
                        }
                    },
                    'complete': function(jqXHR) {
                        $('button[name="' + clicked + '"]').removeAttr('disabled');
                        $('#{{ securityForm.vars.id }} button').removeAttr('clicked');
                        if(jqXHR.responseJSON.action == 'savePassword') {
                            $('#{{ securityForm.user.password.first.vars.id }}').val('');
                            $('#{{ securityForm.user.password.second.vars.id }}').val('');
                        } else if(jqXHR.responseJSON.action == 'saveTransactionPassword') {
                            $('#{{ securityForm.transactionPassword.first.vars.id }}').val('');
                            $('#{{ securityForm.transactionPassword.second.vars.id }}').val('');
                        }
                    }
                });
            });
            $('#{{ securityForm.vars.id }} button[type="submit"]').click(function(e) {
                $('#{{ securityForm.vars.id }} button').removeAttr('clicked');
                $(this).attr('clicked', 'clicked');
            });
            
            // Verification
            $('#verify').click(function(e) {
                e.preventDefault();
                confirm2('Are you sure you want to verify: <b>{{ customer.fName }} {{ customer.lName }} ({{ customer.user.username }})</b>', 'Verify Customer', {
                    'type': null,
                    'confirmButtonClass': 'btn-success btn-md',
                    'confirmButtonText': 'Verify',
                    'html': true,
                    'showLoaderOnConfirm': true
                }, function(isVerify) {
                    if(isVerify) {
                        $.ajax({
                            'url': "{{ path('customer.verify', {'id':customer.id}) }}",
                            'globalAjaxComplete' : false,
                            'success': function (data) {
                                var notifications = data.__notifications || [];
                                $.each(notifications, function(e) {
                                    swal({
                                        'type': this.type,
                                        'title': this.title,
                                        'text': this.message
                                    }, function() {
                                        window.location = "{{ path('customer.update_page', { "id": customer.id }) }}";
                                    });
                                });
                            }
                        });
                    }
                });
            });
        });
        
        function download() {
            var file = $('#documentList').mediaLibrary('getSelectedFile');
            var _path = $('<a>', {href: file.fileInfo.route.render })[0];
            var path = _path.pathname;
            if(_path.search.length > 0) path += _path.search + "&title=" + file.fileInfo.title + '.' + file.fileInfo.ext;
            else path += "?title=" + file.fileInfo.title + '.' + file.fileInfo.ext;
            
            window.open(path,'_blank');
        }
        
        function deleteFile() {
            var file = $('#documentList').mediaLibrary('getSelectedFile');
            $.ajax({
                'url': "{{ path('customer.document_delete', {"id": customer.id}) }}",
                'type': 'POST',
                'data': {'index': file.index },
                'success': function(data) {
                    $('.document-details-container .document-file-none').removeClass('hide');
                    $('.document-details-container .document-file-selected ').addClass('hide');
                    var file = $('#documentList').mediaLibrary('getFile', data.index);
                    file.destroy();
                }
            });
        }
        
        var url = {
            document_save: '{{ path('customer.document_save', {'id': customer.id}) }}',
            document_list: '{{ path('customer.document_list', {'id': customer.id}) }}',
            'paymentOption': {
                'templateFile': '{{ asset('assets/templates/payments.xsl') }}',
                'saveNew': "{{path('customer.payment_option_save', {'id': customer.id, 'paymentOptionId': '__index__'}) }}"
            }
        };
        
        var paymentOptions = {{ setting('paymentOptions')|raw }};
        var customerPaymentOptions = {{ (customer.details.paymentOptions|default([]))|json_encode()|raw }};
        
        $(function() {
            $('#{{ form.btnGroup.convert.vars.id }}').click(function() {
                window.location = "{{ path('customer.convert_to_affiliate', {'id':customer.id, 'callback': path('customer.update_page', {"id": customer.id})}) }}";
            });
        });
    </script>
    <script type="text/javascript" src="{{ asset("bundles/customer/js/customer_page.js") }}"></script>
{% endblock %}