{% extends 'AppBundle:Layout:base.html.twig' %}

{% block title %}{{ "page.title.affiliate"|trans({},"CustomerBundle") }}{% endblock %} 

{% block stylesheets %}
    <!-- DataTables -->
    <link href="{{ asset('assets/plugins/datatables/jquery.dataTables.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/dataTables.colVis.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/plugins/datatables/dataTables.bootstrap.min.css') }}" rel="stylesheet" type="text/css"/>
{% endblock %}

{% block pageTitle -%}{{ "menus.Affiliate"|trans({},"CustomerBundle") }}{%- endblock %}

{% block breadcrumb -%}
    <li>{{ "breadcrumb.marketing"|trans({},"AppBundle") }}</li>
    <li class='active'>{{ "breadcrumb.list"|trans({},"CustomerBundle") }}</li>
{%- endblock %}

{% block pageHeaderExtra %}
<div class="pull-right">
    {% if is_granted('ROLE_CUSTOMER_CREATE') %}
    <a class="btn btn-primary waves-effect waves-light pull-right m-b-10" href="{{ path("affiliate.create_page") }}"><span><i class="ti-plus m-r-5"></i></span> {{ "quickLinks.addAffiliate"|trans({},"CustomerBundle") }}</a>
    {% endif %}
    <ul class="list-inline quicklinks font-13 font-normal text-right">
        <li>{{ "quickLinks.name"|trans({},"CustomerBundle") }}:</li>
        {% if is_granted('ROLE_CUSTOMER_VIEW') %} 
        <li><a href="{{ path("customer.list_page") }}">{{ "quickLinks.customerList"|trans({},"CustomerBundle") }}</a></li>|
        {% endif %}
        {% if is_granted('ROLE_CUSTOMER_CREATE') %} 
        <li><a href="{{ path("customer.create_page") }}">{{ "quickLinks.addCustomer"|trans({},"CustomerBundle") }}</a></li>|
        {% endif %}
        {% if is_granted('ROLE_TRANSACTION_VIEW') %} 
        <li><a href="{{ path("transaction.list_page") }}">{{ "quickLinks.transList"|trans({},"CustomerBundle") }}</a></li>
        {% endif %}
    </ul>
</div>
{% endblock pageHeaderExtra %}

{% block page %}
    <div class="col-sm-12">
        <div class="card-box">
            <div id="customerList">
                <table id="datatable-responsive"
                    class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0"
                    width="100%">
                    <thead>
                        <tr>
                            <th>{{ "fields.id"|trans({}, "CustomerBundle") }}</th>
                            <th data-priority="1">{{ "fields.fullName"|trans({}, "CustomerBundle") }}</th>
                            <th>{{ "fields.username"|trans({}, "UserBundle") }}</th>
                            <th>{{ "fields.email"|trans({}, "CustomerBundle") }}</th>
                            <th>{{ "fields.country"|trans({}, "CustomerBundle") }}</th>
                            <th>{{ "fields.currency"|trans({}, "CustomerBundle") }}</th>
                            <th>{{ "fields.kyc"|trans({}, "CustomerBundle") }}</th>
                            <th>{{ "fields.joinedAt"|trans({}, "CustomerBundle") }}</th>
                            <th>{{ "fields.createdBy"|trans({}, "CustomerBundle") }}</th>
                            <th>{{ "fields.balance"|trans({}, "CustomerBundle") }}</th>
                            <th>{{ "fields.status"|trans({}, "CustomerBundle") }}</th>
                            <th data-priority="2">{{ "fields.action"|trans({}, "AppBundle") }}</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot></tfoot>
                </table>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('bundles/app/js/ZTable.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.bootstrap.js') }}"></script>

    <script src="{{ asset('assets/plugins/datatables/dataTables.buttons.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/vfs_fonts.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/buttons.html5.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.responsive.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/responsive.bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/datatables/dataTables.colVis.js') }}"></script>

    <!--script src="{*{ asset('bundles/customer/js/list.js') }*}" type="text/javascript" ></script-->
    <script type="text/javascript" >
        (function($){

             $.fn.list = function(options, params){
                var settings = options;
                params = params || [];
                return this.each(function(){
                    var elem = $(this);
                    settings = $.extend(true,_defaults(),options);
                    init(elem, settings);
                });
            };

            function init(elem, settings) {
                initTable(elem, settings);
            }

            function initTable(elem, settings) {
                var table = $(elem).find('table');
                var listUrl = settings.url.list;
                var userPreferences = {{ app.user.getPreference('ui.affiliate.list.column.visibility')|json_encode()|raw }};
                var dataTable = new ZTable('#customerList',  {
                    'ajax': {
                        'url': settings.url.list,
                        'data': function (data, dataTable) {
                            return {
                                'search': data.filters.search,
                                'length': data.length,
                                'start': dataTable.start,
                                'datatable': true,
                                'route': true,
                                'draw': dataTable.draw,
                                'order': data.order,
                                'isAffiliate' : 1,
                                'filter' : data.filters
                            };
                        },
                        'dataFilter': function (str) {
                            return str;
                        }
                    },
                    'colvis': {
                        'hidden': function () {
                            var hidden = ['c.id', 'u.username', 'u.email', 'c.balance'];
                            for (var i in userPreferences) {
                                if (userPreferences[i] == 'false') {
                                    hidden.push(eval(i));
                                }
                            }
                            return hidden;
                        },
                        'attrs': {
                            'colvisButton' : {
                                'data-style': 'btn-primary'
                            }
                        },
                        'exclude': ['c.id', 'u.username', 'u.email' , 'c.fName,c.lName', 'customer.action', 'c.balance']
                    },
                    'featuresDom': "<'form-inline'"
                    + "<'form-group m-r-10 ft-date'<'xs-date 'ft>>"
                    + "cskopydb"
                    + "<'form-group' <'m-t-10'b>>>",
                'features': {
                        'from': {
                            'dom': "<'form-group form-group-sm m-r-10'<'input-group'i<^span 'input-group-addon bg-white text-default'<!'fa fa-calendar'!>>>>",
                            'type': 'date',
                            'label': 'From',
                            'symbol': 'f',
                            'attrs': {
                                'placeholder': 'From',
                                'type': 'input',
                                'class': 'form-control cls-date'
                            },
                            'applyOnChanged': false
                        },
                        'to': {
                            'dom': "<'form-group form-group-sm m-r-10'<'input-group'i<^span 'input-group-addon bg-white text-default'<!'fa fa-calendar'!>>>>",
                            'type': 'date',
                            'label': 'To',
                            'symbol': 't',
                            'attrs': {
                                'placeholder': 'To',
                                'type': 'input',
                                'class': 'form-control cls-date'
                            },
                            'applyOnChanged': false
                        },
                        'resetFilter': {
                            'type': 'button',
                            'label': 'Reset Filters',
                            'symbol': 'b',
                            'attrs': {
                                'type': 'button',
                                'class': 'btn btn-sm btn-inverse'
                            },
                            'initialized': function (feature) {
                                $(feature.input).click(function () {
                                    $("select.ztable_length_input").val('10').change();
                                    feature.ztable.reset();
                                });
                            }
                        },
                        'applyFilter': {
                            'type': 'button',
                            'label': 'Apply Filter',
                            'symbol': 'd',
                            'attrs': {
                                'type': 'button',
                                'class': 'btn btn-sm btn-default'
                            },
                            'initialized': function (feature) {
                                $(feature.input).click(function () {
                                    feature.ztable.reloadTable();
                                });
                            }
                        },
                        'product': {
                            'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                            'type': 'select',
                            'label': 'Products',
                            'symbol': 'p',
                            'class': 'selectpicker',
                            'attrs': {
                                'data-style': 'btn-white btn-sm',
                                'multiple': 'multiple',
                                'data-none-selected-text': 'Select Product',
                                'data-width': 'auto',
                                'data-size': 5
                            },
                            'resetValue': function (feature) {
                                $(feature.input).selectpicker('val', feature.feature.value);
                            },
                            'initialized': function (feature) {
                                feature.ztable.waitDrawTable();
                                $.ajax({
                                    'url': '{{ path('product.list_search') }}',
                                    'success': function (data) {
                                        var options = {};
                                        for (var i in data) {
                                            $(feature.input).append("<option value='" + data[i].id + "'>" + data[i].name + "</option>");
                                        }
                                        $(feature.input).selectpicker('refresh');
                                    }
                                });
                            }
                        },
                        'paymentOption': {
                            'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                            'type': 'select',
                            'label': 'P.O',
                            'symbol': 'o',
                            'class': 'selectpicker',
                            'attrs': {
                                'data-style': 'btn-white btn-sm',
                                'title': 'Select P.O',
                                'multiple': 'multiple',
                                'data-width': 'auto',
                                'data-size': 5
                            },
                            'applyOnChanged': false,
                            'resetValue': function (feature) {
                                $(feature.input).selectpicker('val', feature.feature.value);
                            },
                            'initialized': function (feature) {
                                feature.ztable.waitDrawTable();
                                $.ajax({
                                    'url': '{{ path('paymentoption.search') }}',
                                    'data' : {'select2' : true },
                                    'success': function (data) {
                                        for (var i in data.items) {
                                            $(feature.input).append("<option value='" + data.items[i].id + "'>" + data.items[i].text + "</option>");
                                        }
                                        $(feature.input).selectpicker('refresh');
                                        feature.ztable.reloadTable();
                                    }
                                });
                            }
                        },
                        'country': {
                            'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                            'type': 'select',
                            'label': 'Country',
                            'symbol': 'y',
                            'class': 'selectpicker',
                            'attrs': {
                                'data-style': 'btn-white btn-sm',
                                'multiple': 'multiple',
                                'data-none-selected-text': 'Select Country',
                                'data-width': 'auto',
                                'data-size': 5
                            },
                            'resetValue': function (feature) {
                                $(feature.input).selectpicker('val', feature.feature.value);
                            },
                            'initialized': function (feature) {
                                $.ajax({
                                    'url': '{{ path('country.list_search') }}',
                                    'type': 'POST',
                                    'success': function (data) {
                                        var options = {};
                                        for (var i in data) {
                                            $(feature.input).append("<option value='" + data[i].id + "'>" + data[i].name + "</option>");
                                        }
                                        $(feature.input).selectpicker('refresh');
                                    }
                                });
                            },
                            'value': []
                        },
                        'KYC': {
                            'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                            'type': 'select',
                            'label': 'KYC Status',
                            'symbol': 'k',
                            'class': 'selectpicker',
                            'attrs': {
                                'data-style': 'btn-white btn-sm',
                                'multiple': 'multiple',
                                'data-none-selected-text': 'Select KYC',
                                'data-width': 'auto'
                            },
                            'applyOnChanged': false,
                            'resetValue': function (feature) {
                                $(feature.input).selectpicker('val', feature.feature.value);
                            },
                            'getValue': function (feature) {
                                var value = $(feature.input).val();
                                if (value === null) {
                                    value = [];
                                }
                                var kycs = [];
                                if (value.length > 0 && value.indexOf('verified') !== Global.variables.indexNotFound) {
                                    kycs.push(Global.customer.kyc.verified.value);
                                }
                                if (value.length > 0 && value.indexOf('unverified') !== Global.variables.indexNotFound) {
                                    kycs.push(Global.customer.kyc.unverified.value);
                                }
                                return kycs;
                            },
                            'rendered': function (feature) {
                                $(feature.input).selectpicker('val', '');
                            },
                            'choices': {
                                'verified': 'Verified',
                                'unverified': 'Unverified'
                            },
                            'value': []
                        },
                        'currencies': {
                            'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                            'type': 'select',
                            'label': 'Currency',
                            'symbol': 'c',
                            'class': 'selectpicker',
                            'attrs': {
                                'data-style': 'btn-white btn-sm',
                                'multiple': 'multiple',
                                'data-none-selected-text': 'Select Currency',
                                'data-width': 'auto',
                                'data-size': 5
                            },
                            'resetValue': function (feature) {
                                $(feature.input).selectpicker('val', feature.feature.value);
                            },
                            'initialized': function (feature) {
                                $.ajax({
                                    'url': '{{ path('currency.list_search') }}',
                                    'type': 'POST',
                                    'success': function (data) {
                                        var options = {};
                                        for (var i in data) {
                                            $(feature.input).append("<option value='" + data[i].id + "'>" + data[i].name + "</option>");
                                        }
                                        $(feature.input).selectpicker('refresh');
                                    }
                                });
                            },
                            'value': []
                        },
                        'status': {
                            'dom': "<'form-group form-group-sm m-r-10 xs-filter'i>",
                            'type': 'select',
                            'label': 'Customer Status',
                            'symbol': 's',
                            'class': 'selectpicker',
                            'attrs': {
                                'data-style': 'btn-white btn-sm',
                                'multiple': 'multiple',
                                'data-none-selected-text': 'Select Status',
                                'data-width': 'auto'
                                //'data-selected-text-format': 'count > 1'
                            },
                            'applyOnChanged': false,
                            'resetValue': function (feature) {
                                $(feature.input).selectpicker('val', feature.feature.value);
                            },
                            'getValue': function (feature) {
                                var value = $(feature.input).val();
                                if (value === null) {
                                    value = [];
                                }
                                var statuses = [];
                                if (value.length > 0 && value.indexOf('enabled') !== Global.variables.indexNotFound) {
                                    statuses.push(Global.customer.status.enabled.value);
                                }
                                if (value.length > 0 && value.indexOf('registered') !== Global.variables.indexNotFound) {
                                    statuses.push(Global.customer.status.registered.value);
                                }
                                if (value.length > 0 && value.indexOf('suspended') !== Global.variables.indexNotFound) {
                                    statuses.push(Global.customer.status.suspended.value);
                                }

                                return statuses;
                            },
                            'rendered': function (feature) {
                                $(feature.input).selectpicker('val', '');
                            },
                            'choices': {
                                'registered': 'Registered',
                                'enabled': 'Enabled',
                                'suspended': 'Suspended'
                            },
                            'value': []
                        }
                    },
                    'columns': settings.columns,
                    'ordering': true,
                    'columnDefs': [
                        { "orderable": false, "targets": [10,11] }
                    ]
                });

                $(table).on('click', 'td a.active-state-action', function(e) {
                    settings.rowOnclick(e, dataTable);
                });

                $('#customerList table').on('draw.dt', function () {
                    dataTable.dataTable.api().columns.adjust().responsive.recalc();
                });

                $(elem).on('refresh', { "dataTable": dataTable}, function(event){
                    dataTable.reloadTable();
                });
            }

            function _defaults() {
                return {
                    'columns': [
                        {
                            'data': 'customer.id',
                            'defaultContent': '',
                            'name': 'c.id',
                            'render': function(data, type, full) {
                                return "<a href='"+full.routes.update+"'>"+data+"</a>";
                            }
                        },
                        {   'data': 'customer',
                            'defaultContent': '',
                            'name': 'c.fName,c.lName',
                            'render': function(data, type, full) {
                                var fullName = full.customer.fName + '&nbsp;' + full.customer.lName;
                                if (data.user.activationTimestamp !== null) {
                                    fullName = fullName + "&nbsp;<i class='icon-user-following cls-activate' title='AMS Activated'></i>";
                                }
                                return fullName;
                            }
                        },
                        { 'data': 'customer.user.username', 'name': 'u.username', 'defaultContent': '' },
                        { 'data': 'customer.user.email', 'name': 'u.email', 'defaultContent': '' },
                        { 'data': 'customer.country.name', 'name': 'cco.name', 'defaultContent': '' },
                        { 'data': 'customer.currency.name', 'name': 'ccu.name', 'defaultContent': '' },
                        {
                            'data': 'customer.verifiedAt',
                            'name': 'c.verifiedAt',
                            'defaultContent': '',
                            'render': function(isVerified) {
                                return (isVerified) ? "Verified" : "Not Verified";
                            }
                        },
                        {
                            'data': 'customer.joinedAt',
                            'name': 'c.joinedAt',
                            'defaultContent': '',
                            'render': function (data) {
                                if (data !== null) {
                                    return moment(data.date).format(Global.dateFormat);
                                }
                                return '';
                            }
                        },
                        { 'data': 'customer.user.creator.username', 'name': 'cr.username', 'defaultContent': '' },
                        {
                            'data': 'customer.balance',
                            'defaultContent': '',
                            'name': 'c.balance',
                            'render': function(data) {
                                return (new Decimal(data)).toFixed(2);
                            }
                        },
                        {
                            'data': 'customer',
                            'name': 'status',
                            'render': function (data, text, full) {
                                var status = 'Registered';
                                if (!data.details.enabled && data.user.isActive) {
                                    status = 'Registered';
                                } else if (!data.user.isActive) {
                                    status = 'Suspended';
                                } else if (data.details.enabled && data.user.isActive) {
                                    status = 'Enabled';
                                }

                                return status;
                            }
                        },
                        {
                            'data': 'customer',
                            'name': 'customer.action',
                            'render': function(data, text, full) {
                                var action = "<a class='btn btn-primary waves-effect waves-light btn-xs ' title='Profile' href='"+full.routes.update+"/profile'><i class='ti-user'></i> </a>";
                                var finance = "<a action='transaction'  title='Transaction History' class='btn btn-icon waves-effect waves-light btn-xs btn-purple btn-icn active-state-action' href='#'><i class='ti-money'></i></a>";
                                var product = "<a action='product' title='Product'  class='btn btn-icon waves-effect waves-light btn-warning btn-xs btn-icn active-state-action' href='#'> <i class='ti-bag'></i> </button>";
                                var remove = "<a class='btn btn-icon waves-effect waves-light btn-danger btn-xs btn-icn active-state-action' title='Remove' href='#'> <i class='ti-trash'></i> </button>";
                                var convertCustomer = "<a action='convertCustomer' class='btn btn-icon waves-effect waves-light btn-success btn-xs btn-icn active-state-action' href='#'> <i class='ti-loop'></i> </button>";
                                var customer = "<a action='customer' title='"+ full.referralCount +"' class='btn btn-icon waves-effect waves-light btn-info btn-xs btn-icn active-state-action' href='#'> <i class='icon-people'></i> </button>";

                                action = action + ' ' + finance;
                                if (!data.isCustomer) {
                                    action = action + ' ' + convertCustomer;
                                } else {
                                    action = action + ' ' + product;
                                }
                                action = action + ' ' + customer;

                                return action;
                            }
                        }
                    ]
                };
            }
        })(jQuery);
    </script>
    <script type="text/javascript" >
    $(function(){
        $('#customerList').list({
            'url': {
                'list': '{{- path("customer.list_search") -}}'
            },
            'rowOnclick': function (e, zTable) {
                dataTable = zTable.dataTable.api();
                e.preventDefault();
                var currentRow = $(e.target).parents('tr');
                if (currentRow.hasClass('child'))
                    currentRow = currentRow.prev();

                var data = dataTable.row(currentRow).data() ;
                var anchor = $(e.target).closest('a');
                var mode = anchor.attr('action');

                if (mode == 'suspend') {
                    suspendCustomer(data);
                } else if (mode == 'activate') {
                    activateCustomer(data);
                } else if (mode == 'transaction') {
                    gotoTransactionTab(data.customer);
                } else if (mode == 'product') {
                    gotoProductTab(data.customer);
                } else if (mode == 'convertCustomer') {
                    convertToCustomer(data);
                } else if (mode == 'customer') {
                    gotoCustomerTab(data.customer);
                }
            }
        });

        $('#customerList').on('ztable.change.column.visible', function (e, colvis, ztable) {
            saveUserPreferences({'ui.customer.list.column.visibility': ztable.getColumnVisibility()});
        });
    });

    function gotoCustomerTab(affiliate)
    {
        var postURL = "{{ path('affiliate.update_page', {'id': "affiliate_id", 'activeTab': 'customers' }) }}";
        window.location =  postURL.replace("affiliate_id", affiliate.id);
    }

    function gotoTransactionTab(affiliate)
    {
        var postURL = "{{ path('affiliate.update_page', {'id': "affiliate_id", 'activeTab': 'transactions' }) }}";
        window.location =  postURL.replace("affiliate_id", affiliate.id);
    }

    function gotoProductTab(affiliate)
    {
        var postURL = "{{ path('affiliate.update_page', {'id': "affiliate_id", 'activeTab': 'product' }) }}";
        window.location =  postURL.replace("affiliate_id", affiliate.id);
    }

    function suspendCustomer(rowData)
    {
        var customer = rowData.customer;
        confirm2('Are you sure you want to suspend '+ customer.user.username , 'Suspend Customer', {
            'type': null,
            'confirmButtonClass': 'btn-success btn-md',
            'confirmButtonText': 'Yes',
            'html': true,
            'showLoaderOnConfirm': true
        }, function(isSuspended) {
            if(isSuspended) {
                $.ajax({
                    url : "{{ path('user.suspend') }}",
                    globalAjaxComplete : false,
                    type: "POST",
                    dataType: "JSON",
                    data: {
                        "userId": customer.user.id
                    },
                    success : function (data) {
                        var notifications = data.__notifications || [];
                        swal({
                            'type': notifications.type,
                            'title': notifications.title,
                            'text': notifications.message
                        }, function() {
                            $('#customerList').trigger('refresh');
                        });
                    }
                });
            }
        });
    }

    function activateCustomer(rowData)
    {
        var customer = rowData.customer;
        confirm2('Are you sure you want to activate '+ customer.user.username , 'Activate Customer', {
            'type': null,
            'confirmButtonClass': 'btn-success btn-md',
            'confirmButtonText': 'Yes',
            'html': true,
            'showLoaderOnConfirm': true
        }, function(isActivated) {
            if(isActivated) {
                $.ajax({
                    url : "{{ path('user.activate') }}",
                    globalAjaxComplete : false,
                    type: "POST",
                    dataType: "JSON",
                    data: {
                        "userId": customer.user.id
                    },
                    'success': function (data) {
                        var notifications = data.__notifications || [];
                        swal({
                            'type': notifications.type,
                            'title': notifications.title,
                            'text': notifications.message
                        }, function() {
                            $('#customerList').trigger('refresh');
                        });
                    }
                });
            }
        });
    }

    function convertToCustomer(rowData)
    {
        var customer = rowData.customer;
        var postUrl = '{{ path('affiliate.convert_to_customer', {'id': 'customer_id', 'callback': "false" }) }}';
        confirm2('Are you sure you want to make a customer account for '+ customer.fName + '&nbsp;' + customer.lName + ' affiliate?', 'Convert Affiliate', {
            'type': null,
            'confirmButtonClass': 'btn-success btn-md',
            'confirmButtonText': 'Create',
            'html': true,
            'showLoaderOnConfirm': true
        }, function(isConverted) {
            if(isConverted) {
                $.ajax({
                    url : postUrl.replace("customer_id", customer.id),
                    globalAjaxComplete : false,
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        "customerId": customer.id
                    },
                    success : function (data) {
                        var notifications = data.__notifications || [];
                        swal({
                            'type': notifications.type,
                            'title': notifications.title,
                            'text': notifications.message
                        }, function() {
                            var redirectUrl = '{{path('customer.update_page', {"id": "customer_id"}) }}';
                            window.location = redirectUrl.replace("customer_id", customer.id);
                        });
                    }
                });
            }
        });
    }
    </script>
{% endblock %}