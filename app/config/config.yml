imports:
    - { resource: parameters.yml }
    - { resource: services.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }
    - { resource: "@DbBundle/Resources/config/services.yml" }
    - { resource: "@GroupBundle/Resources/config/services.yml" }
    - { resource: "@UserBundle/Resources/config/services.yml" }
    - { resource: "@ProductBundle/Resources/config/services.yml" }
    - { resource: "@CurrencyBundle/Resources/config/services.yml" }
    - { resource: "@CountryBundle/Resources/config/services.yml" }
    - { resource: "@CustomerBundle/Resources/config/services.yml" }
    - { resource: "@MemberBundle/Resources/config/services.yml" }
    - { resource: "@GatewayBundle/Resources/config/services.yml" }
    - { resource: "@NoticeBundle/Resources/config/services.yml" }
    - { resource: "@TicketBundle/Resources/config/services.yml" }
    - { resource: "@TransactionBundle/Resources/config/services.yml" }
    - { resource: "@BonusBundle/Resources/config/services.yml" }
    - { resource: "@MediaBundle/Resources/config/services.yml" }
    - { resource: "@SessionBundle/Resources/config/services.yml" }
    - { resource: "@ThemeBundle/Resources/config/services.yml" }
    - { resource: "@DWLBundle/Resources/config/services.yml" }
    - { resource: "@ApiBundle/Resources/config/services.yml" }
    - { resource: "@PaymentOptionBundle/Resources/config/services.yml" }
    - { resource: "@GatewayTransactionBundle/Resources/config/services.yml" }
    - { resource: "@AuditBundle/Resources/config/services.yml" }
    - { resource: "@ReportBundle/Resources/config/services.yml" }
    - { resource: "@WebSocketBundle/Resources/config/services.yml" }
    - { resource: "@CommissionBundle/Resources/config/services.yml" }
    - { resource: packages/ }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    jms_serializer.form_error_handler.class: ApiBundle\Serializer\Normalizer\FormErrorHandler

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: snc_redis.session.handler
        # save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments:       ~
    http_method_override: true
    serializer: { enabled: true }
    trusted_proxies:  "%trusted_proxies%"

swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    port:      "%mailer_port%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    encryption: "%mailer_encryption%"
    spool:
        type: file
        path: "%kernel.project_dir%/var/spool"

assetic:
    bundles: ~
    debug:          "%kernel.debug%"
    use_controller: "%kernel.debug%"
    filters:
        cssrewrite: ~

jms_serializer:
    metadata:
        directories:
            DbBundleEntity:
                namespace_prefix: DbBundle\Entity
                path: "@DbBundle/Resources/config/serializer"
    default_context:
        serialization:
            serialize_null: true
            version: ~
            attributes: {}
            groups: ['Default', 'REST']
            enable_max_depth_checks: true
        deserialization:
            serialize_null: true
            version: ~
            attributes: {}
            groups: ['Default', 'REST']
            enable_max_depth_checks: true

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
        forced_allow_origin_value: ~
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['X-Custom-Auth']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600
        '^/':
            origin_regex: true
            allow_origin: ['^http://localhost:[0-9]+']
            allow_headers: ['X-Custom-Auth']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600
            hosts: ['^api\.']

nelmio_api_doc:
    name: Back Office API

fos_rest:
    zone:
        - { path: ^/(%app_locales%)/api/* }
    param_fetcher_listener: true
    routing_loader:
        default_format: null
        include_format: false
    view:
        view_response_listener: 'force'
        formats:
            json: true
            xml: true
        templating_formats:
            html: false
    allowed_methods_listener: true
    access_denied_listener:
        json: true
    format_listener:
        rules:
            -
                path: ^/(%app_locales%)/api
                priorities: ['json', 'xml']
                fallback_format: xml
                prefer_extension: false
            - { path: '^/', stop: true }
    service:
        view_handler: api.view_handler

jms_job_queue:
    queue_options_defaults:
        max_concurrent_jobs: 5
    queue_options:
        payout:
            max_concurrent_jobs: 1
        autoDecline:
            max_concurrent_jobs: 1

#sensio_framework_extra:
#    view:
#        annotations: false

#sensio_framework_extra:
#    view:    { annotations: false }
#    router:  { annotations: true }

brokerage:
    url: '%betadmin.url%'
    security:
        token: '%betadmin.security.access_token%'
        token_type: '%betadmin.security.token_type%'
