ApiBundle\Request\RegisterRequest:
  group_sequence_provider: true
  constraints:
    - Expression:
        expression: "this.getEmail() !== '' or this.getPhoneNumber() !== ''"
        message: "Email or Phone Number must not blank"
  getters:
    verificationCode:
      - TwoFactorBundle\Validator\Constraints\IsCodeCorrect:
          payloadPath: 'object.getVerificationPayload()'
    email:
      - NotBlank:
          groups: [Email]
      - Email:
          groups: [Email]
      - AppBundle\Validator\Constraints\Unique:
          entityClass: DbBundle\Entity\User
          select: " e.email "
          expression: " e.email = :value0 "
          requiredKey: [email]
          groups: [Email]
    phoneNumber:
      - NotBlank:
          groups: [Phone]
    phoneWithCountryCode:
      - NotBlank:
          groups: [Phone]
      - AppBundle\Validator\Constraints\Unique:
          entityClass: DbBundle\Entity\User
          select: " e.username "
          expression: " e.username = :value0 "
          requiredKey: [email]
          groups: [Phone]
    countryPhoneCode:
      - NotBlank:
          groups: [Phone]
      - AppBundle\Validator\Constraints\Exists:
          groups: [Phone]
          entityClass: DbBundle\Entity\Country
          column: phoneCode
          message: 'Country Phone Code does not exists'
    password:
      - NotBlank: ~
      - Regex:
          pattern: '/(?=^.{8,}$)(?=(.*[0-9]){2,})(?=(.*[A-Za-z]){2,})(?=(.*[+\-\/\{~\}!"^_`\[\]:$!@#%^&*\?]){2,})/'
          match: true
          message: "Password is invalid. Must be at least 8 characters, contain at least 2 letters, 2 digits and 2 symbols."
    repeatPassword:
      - Expression:
          expression: "this.getPassword() === this.getRepeatPassword()"
          message: "Password does not match"