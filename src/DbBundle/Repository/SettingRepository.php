<?php

namespace DbBundle\Repository;

use DbBundle\Entity\Setting;

/**
 * SettingRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SettingRepository extends \DbBundle\Repository\BaseRepository
{
    public function findAll($isArray = false)
    {
        $qb = $this->createQueryBuilder('s');

        return $qb->getQuery()->getArrayResult();
    }

    public function updateSetting($key, $code, $value, $isAssocArray = false)
    {
        $status = false;

        if ($key === null || $code === null) {
            return false;
        }

        $qb = $this->createQueryBuilder('s');

        if (!$isAssocArray) {
            $qb->update('DbBundle:Setting', 's')
             ->set('s.value', 'JSON_SET(s.value, :key, :value )')
             ->setParameter('key', ['$.' . $key])
             ->setParameter('value', [$value])
             ->where($qb->expr()->eq('s.code', ':code'))
             ->setParameter('code', $code);
        } else {
            $qb->update('DbBundle:Setting', 's')
             ->set('s.value', ':value')
             ->where($qb->expr()->eq('s.code', ':code'))
             ->setParameter('value', json_encode($value))
             ->setParameter('code', $code);
        }
        
        $qb->getQuery()->execute();

        return true;
    }

    public function getSettingValue($code = 'counter')
    {
        $qb = $this->createQueryBuilder('s');

        return  $qb->select('s.value')
                ->where($qb->expr()->andX('s.code = :code'))
                ->setParameter('code', $code)
                ->getQuery()->getSingleScalarResult();
    }

    public function getSettingByCodes($codes = array())
    {
        $settings = $this->findAll();
        $data = array();
            
        foreach($settings as $setting){
            if(in_array($setting['code'], $codes)){
                $data[$setting['code']] = $setting['value'];
            }
        }
        
        return $data;
    }
}
